{"ast":null,"code":"var _jsxFileName = \"/Users/jaysingh/sample2copy/src/components/UserManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/UserManagement.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserManagement({\n  isAppAdmin,\n  onLogout\n}) {\n  _s();\n  var _applications$find;\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [selectedApp, setSelectedApp] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [applications, setApplications] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const userData = await api.getCurrentUser();\n      setCurrentUser(userData);\n      if (userData.user_type === 'app_admin') {\n        const appAdminApps = await api.getAppAdminApplications(userData.user_id);\n        setApplications(appAdminApps);\n      } else {\n        const [usersData, appsData, rolesData] = await Promise.all([api.getUsers(), api.getApplications(), api.getRoles()]);\n        setUsers(usersData);\n        setApplications(appsData);\n        setRoles(rolesData);\n      }\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch data');\n      console.error('Error fetching data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleAddUser = async () => {\n    if (newUser.trim() && newUserEmail.trim()) {\n      try {\n        // First create the user\n        const user = await api.createUser({\n          username: newUser,\n          email: newUserEmail,\n          password_hash: 'defaultPassword123',\n          user_type: 'end'\n        });\n\n        // If app admin and application is selected, assign the user to the application\n        if (isAppAdmin && selectedApp && selectedRole) {\n          await api.assignUserToApplication(user.user_id, selectedApp, selectedRole);\n        }\n\n        // Refresh the users list\n        await fetchData();\n\n        // Clear the form\n        setNewUser('');\n        setNewUserEmail('');\n        setSelectedApp('');\n        setSelectedRole('');\n        setSuccess('User added successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error creating user:', err);\n        setError('Failed to add user: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      }\n    } else {\n      setError('Please provide both username and email');\n    }\n  };\n  const handleAssignApp = async (userId, appId, role) => {\n    try {\n      await api.assignUserToApplication(userId, appId, role);\n      const updatedUsers = users.map(user => user.id === userId ? {\n        ...user,\n        assignedApps: [...user.assignedApps, {\n          appId,\n          role\n        }]\n      } : user);\n      setUsers(updatedUsers);\n      setSuccess('User assigned successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to assign user');\n    }\n  };\n  const handleRemoveAssignment = async (userId, appId) => {\n    try {\n      await api.removeUserFromApplication(userId, appId);\n      const updatedUsers = users.map(user => user.id === userId ? {\n        ...user,\n        assignedApps: user.assignedApps.filter(app => app.appId !== appId)\n      } : user);\n      setUsers(updatedUsers);\n      setSuccess('Assignment removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to remove assignment');\n    }\n  };\n  const handleAddRole = async (appId, roleName) => {\n    try {\n      await api.createRole({\n        app_id: appId,\n        role_name: roleName\n      });\n      const updatedApps = applications.map(app => app.id === appId ? {\n        ...app,\n        roles: [...app.roles, roleName]\n      } : app);\n      setApplications(updatedApps);\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to add role');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-management-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: onLogout,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-user-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newUser,\n        onChange: e => setNewUser(e.target.value),\n        placeholder: \"Enter new user name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: newUserEmail,\n        onChange: e => setNewUserEmail(e.target.value),\n        placeholder: \"Enter user email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), isAppAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedApp,\n          onChange: e => {\n            setSelectedApp(e.target.value);\n            setSelectedRole(''); // Reset role when app changes\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: app.id,\n            children: app.app_name\n          }, app.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRole,\n          onChange: e => setSelectedRole(e.target.value),\n          disabled: !selectedApp,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), selectedApp && ((_applications$find = applications.find(app => app.id === selectedApp)) === null || _applications$find === void 0 ? void 0 : _applications$find.roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: role,\n            children: role\n          }, role, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }, this)))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddUser,\n        disabled: isAppAdmin && (!selectedApp || !selectedRole),\n        children: [\"Add \", isAppAdmin ? 'End User' : 'App Admin']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), !isAppAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Current Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => {\n          var _user$assignedApps;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user-name\",\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user-email\",\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user-type\",\n                children: user.user_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-assignments\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Assigned Applications:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this), ((_user$assignedApps = user.assignedApps) === null || _user$assignedApps === void 0 ? void 0 : _user$assignedApps.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"assignments-list\",\n                  children: user.assignedApps.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"assignment-tag\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"app-name\",\n                      children: assignment.appName || 'Unknown App'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"role-name\",\n                      children: [\"(\", assignment.role || 'No Role', \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"remove-assignment\",\n                      onClick: () => handleRemoveAssignment(user.user_id, assignment.appId),\n                      title: \"Remove Assignment\",\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"no-assignments\",\n                  children: \"No applications assigned\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"assignment-controls\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => {\n                  const [appId, role] = e.target.value.split('|');\n                  handleAssignApp(user.user_id, appId, role);\n                  e.target.value = '';\n                },\n                defaultValue: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true,\n                  children: \"Assign to Application\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this), applications.map(app => (app.roles || []).map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: `${app.id}|${role}`,\n                  children: [app.app_name, \" - \", role]\n                }, `${app.id}-${role}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 25\n                }, this)))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, user.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), isAppAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"role-management\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Manage Roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-roles\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: app.app_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-role-form\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New role name\",\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                handleAddRole(app.id, e.target.value);\n                e.target.value = '';\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"role-list\",\n          children: (app.roles || []).map((role, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"role-tag\",\n            children: role\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, this)]\n      }, app.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(UserManagement, \"uJO8xOP8f4Rn2wYxVZtb18wAMdw=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManagement","isAppAdmin","onLogout","_s","_applications$find","users","setUsers","newUser","setNewUser","newUserEmail","setNewUserEmail","selectedApp","setSelectedApp","selectedRole","setSelectedRole","applications","setApplications","roles","setRoles","loading","setLoading","error","setError","success","setSuccess","currentUser","setCurrentUser","fetchData","userData","getCurrentUser","user_type","appAdminApps","getAppAdminApplications","user_id","usersData","appsData","rolesData","Promise","all","getUsers","getApplications","getRoles","err","console","handleAddUser","trim","user","createUser","username","email","password_hash","assignUserToApplication","setTimeout","_err$response","_err$response$data","response","data","message","handleAssignApp","userId","appId","role","updatedUsers","map","id","assignedApps","handleRemoveAssignment","removeUserFromApplication","filter","app","handleAddRole","roleName","createRole","app_id","role_name","updatedApps","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","app_name","disabled","find","_user$assignedApps","length","assignment","index","appName","title","split","defaultValue","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/jaysingh/sample2copy/src/components/UserManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/UserManagement.css';\n\nfunction UserManagement({ isAppAdmin, onLogout }) {\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [selectedApp, setSelectedApp] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [applications, setApplications] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const userData = await api.getCurrentUser();\n      setCurrentUser(userData);\n      \n      if (userData.user_type === 'app_admin') {\n        const appAdminApps = await api.getAppAdminApplications(userData.user_id);\n        setApplications(appAdminApps);\n      } else {\n        const [usersData, appsData, rolesData] = await Promise.all([\n          api.getUsers(),\n          api.getApplications(),\n          api.getRoles()\n        ]);\n        setUsers(usersData);\n        setApplications(appsData);\n        setRoles(rolesData);\n      }\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch data');\n      console.error('Error fetching data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleAddUser = async () => {\n    if (newUser.trim() && newUserEmail.trim()) {\n      try {\n        // First create the user\n        const user = await api.createUser({\n          username: newUser,\n          email: newUserEmail,\n          password_hash: 'defaultPassword123',\n          user_type: 'end'\n        });\n\n        // If app admin and application is selected, assign the user to the application\n        if (isAppAdmin && selectedApp && selectedRole) {\n          await api.assignUserToApplication(user.user_id, selectedApp, selectedRole);\n        }\n\n        // Refresh the users list\n        await fetchData();\n        \n        // Clear the form\n        setNewUser('');\n        setNewUserEmail('');\n        setSelectedApp('');\n        setSelectedRole('');\n        \n        setSuccess('User added successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        console.error('Error creating user:', err);\n        setError('Failed to add user: ' + (err.response?.data?.message || err.message));\n      }\n    } else {\n      setError('Please provide both username and email');\n    }\n  };\n\n  const handleAssignApp = async (userId, appId, role) => {\n    try {\n      await api.assignUserToApplication(userId, appId, role);\n      const updatedUsers = users.map(user => \n        user.id === userId \n          ? { \n              ...user, \n              assignedApps: [...user.assignedApps, { appId, role }] \n            } \n          : user\n      );\n      setUsers(updatedUsers);\n      setSuccess('User assigned successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to assign user');\n    }\n  };\n\n  const handleRemoveAssignment = async (userId, appId) => {\n    try {\n      await api.removeUserFromApplication(userId, appId);\n      const updatedUsers = users.map(user =>\n        user.id === userId\n          ? {\n              ...user,\n              assignedApps: user.assignedApps.filter(app => app.appId !== appId)\n            }\n          : user\n      );\n      setUsers(updatedUsers);\n      setSuccess('Assignment removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to remove assignment');\n    }\n  };\n\n  const handleAddRole = async (appId, roleName) => {\n    try {\n      await api.createRole({\n        app_id: appId,\n        role_name: roleName\n      });\n      const updatedApps = applications.map(app =>\n        app.id === appId\n          ? { ...app, roles: [...app.roles, roleName] }\n          : app\n      );\n      setApplications(updatedApps);\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to add role');\n    }\n  };\n\n  if (loading) return <div className=\"loading\">Loading...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"user-management-container\">\n      <div className=\"user-management-header\">\n        <h3>User Management</h3>\n        <button className=\"back-button\" onClick={onLogout}>Sign Out</button>\n      </div>\n      {success && <div className=\"success-message\">{success}</div>}\n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"add-user-form\">\n        <input\n          type=\"text\"\n          value={newUser}\n          onChange={(e) => setNewUser(e.target.value)}\n          placeholder=\"Enter new user name\"\n        />\n        <input\n          type=\"email\"\n          value={newUserEmail}\n          onChange={(e) => setNewUserEmail(e.target.value)}\n          placeholder=\"Enter user email\"\n        />\n        {isAppAdmin && (\n          <>\n            <select\n              value={selectedApp}\n              onChange={(e) => {\n                setSelectedApp(e.target.value);\n                setSelectedRole(''); // Reset role when app changes\n              }}\n            >\n              <option value=\"\">Select Application</option>\n              {applications.map(app => (\n                <option key={app.id} value={app.id}>\n                  {app.app_name}\n                </option>\n              ))}\n            </select>\n            <select\n              value={selectedRole}\n              onChange={(e) => setSelectedRole(e.target.value)}\n              disabled={!selectedApp}\n            >\n              <option value=\"\">Select Role</option>\n              {selectedApp && applications\n                .find(app => app.id === selectedApp)?.roles\n                .map(role => (\n                  <option key={role} value={role}>\n                    {role}\n                  </option>\n                ))}\n            </select>\n          </>\n        )}\n        <button \n          onClick={handleAddUser}\n          disabled={isAppAdmin && (!selectedApp || !selectedRole)}\n        >\n          Add {isAppAdmin ? 'End User' : 'App Admin'}\n        </button>\n      </div>\n\n      {!isAppAdmin && (\n        <div className=\"users-list\">\n          <h4>Current Users</h4>\n          <ul>\n            {users.map((user) => (\n              <li key={user.user_id}>\n                <div className=\"user-info\">\n                  <span className=\"user-name\">{user.username}</span>\n                  <span className=\"user-email\">{user.email}</span>\n                  <span className=\"user-type\">{user.user_type}</span>\n                  <div className=\"user-assignments\">\n                    <strong>Assigned Applications:</strong>\n                    {user.assignedApps?.length > 0 ? (\n                      <div className=\"assignments-list\">\n                        {user.assignedApps.map((assignment, index) => (\n                          <div key={index} className=\"assignment-tag\">\n                            <span className=\"app-name\">{assignment.appName || 'Unknown App'}</span>\n                            <span className=\"role-name\">({assignment.role || 'No Role'})</span>\n                            <button \n                              className=\"remove-assignment\"\n                              onClick={() => handleRemoveAssignment(user.user_id, assignment.appId)}\n                              title=\"Remove Assignment\"\n                            >\n                              ×\n                            </button>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <span className=\"no-assignments\">No applications assigned</span>\n                    )}\n                  </div>\n                </div>\n                <div className=\"assignment-controls\">\n                  <select\n                    onChange={(e) => {\n                      const [appId, role] = e.target.value.split('|');\n                      handleAssignApp(user.user_id, appId, role);\n                      e.target.value = '';\n                    }}\n                    defaultValue=\"\"\n                  >\n                    <option value=\"\" disabled>Assign to Application</option>\n                    {applications.map(app => (\n                      (app.roles || []).map(role => (\n                        <option \n                          key={`${app.id}-${role}`} \n                          value={`${app.id}|${role}`}\n                        >\n                          {app.app_name} - {role}\n                        </option>\n                      ))\n                    ))}\n                  </select>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {isAppAdmin && (\n        <div className=\"role-management\">\n          <h4>Manage Roles</h4>\n          {applications.map(app => (\n            <div key={app.id} className=\"app-roles\">\n              <h5>{app.app_name}</h5>\n              <div className=\"add-role-form\">\n                <input\n                  type=\"text\"\n                  placeholder=\"New role name\"\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                      handleAddRole(app.id, e.target.value);\n                      e.target.value = '';\n                    }\n                  }}\n                />\n              </div>\n              <div className=\"role-list\">\n                {(app.roles || []).map((role, index) => (\n                  <span key={index} className=\"role-tag\">{role}</span>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}