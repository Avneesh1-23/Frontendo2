{"ast":null,"code":"var _jsxFileName = \"/Users/jaysingh/sample2/src/components/ApplicationList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/ApplicationList.css';\nimport AppManagementModal from './AppManagementModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApplicationList({\n  userType\n}) {\n  _s();\n  const [applications, setApplications] = useState([]);\n  const [newApp, setNewApp] = useState({\n    name: '',\n    url: '',\n    roles: ''\n  });\n  const [newRole, setNewRole] = useState({\n    appId: '',\n    roleName: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedApp, setSelectedApp] = useState(null);\n  useEffect(() => {\n    fetchApplications();\n  }, []);\n  const fetchApplications = async () => {\n    try {\n      console.log('Fetching applications...');\n      const data = await api.getApplications();\n      console.log('Received applications:', data);\n      setApplications(data);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching applications:', err);\n      setError(`Failed to fetch applications: ${err.message}`);\n      setLoading(false);\n    }\n  };\n  const handleAddApplication = async () => {\n    if (newApp.name && newApp.url) {\n      try {\n        const application = {\n          app_name: newApp.name,\n          app_url: newApp.url,\n          description: newApp.roles,\n          created_by: 2 // This should come from the logged-in user\n        };\n        const result = await api.createApplication(application);\n        setApplications([...applications, result]);\n        setNewApp({\n          name: '',\n          url: '',\n          roles: ''\n        });\n        setSuccess('Application added successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        console.error('Error adding application:', err);\n        setError(`Failed to add application: ${err.message}`);\n      }\n    } else {\n      setError('Please fill in all required fields');\n    }\n  };\n  const handleAddRole = async (appId, roleName) => {\n    if (!appId || !roleName) {\n      setError('Please select an application and enter a role name');\n      return;\n    }\n    try {\n      // This would be an API call to add a role\n      const updatedApplications = applications.map(app => app.app_id === parseInt(appId) ? {\n        ...app,\n        roles: [...(app.roles || []), roleName]\n      } : app);\n      setApplications(updatedApplications);\n      setNewRole({\n        appId: '',\n        roleName: ''\n      });\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error adding role:', err);\n      setError(`Failed to add role: ${err.message}`);\n    }\n  };\n  const handleRemoveRole = async (appId, roleToRemove) => {\n    try {\n      // This would be an API call to remove a role\n      const updatedApplications = applications.map(app => app.app_id === appId ? {\n        ...app,\n        roles: (app.roles || []).filter(role => role !== roleToRemove)\n      } : app);\n      setApplications(updatedApplications);\n      setSuccess('Role removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error removing role:', err);\n      setError(`Failed to remove role: ${err.message}`);\n    }\n  };\n  const handleAccessApp = async app => {\n    // Check if this is the Github App (by name or URL)\n    if (app.app_name === \"Github App\" || app.app_url.includes(\"github.com\")) {\n      try {\n        // Open GitHub in a new window\n        const githubWindow = window.open('https://github.com/login', '_blank', 'noopener,noreferrer');\n\n        // Wait for the window to load\n        setTimeout(() => {\n          if (githubWindow) {\n            // Inject the credentials\n            githubWindow.postMessage({\n              type: 'AUTO_FILL_CREDENTIALS',\n              credentials: {\n                username: 'avneeshsingh0704@gmail.com',\n                password: 'Chupke1@'\n              }\n            }, 'https://github.com');\n\n            // Add event listener for the login form\n            githubWindow.addEventListener('load', () => {\n              try {\n                // Find and fill the login form\n                const loginForm = githubWindow.document.querySelector('form[action=\"/session\"]');\n                if (loginForm) {\n                  const usernameInput = loginForm.querySelector('input[name=\"login\"]');\n                  const passwordInput = loginForm.querySelector('input[name=\"password\"]');\n                  if (usernameInput && passwordInput) {\n                    usernameInput.value = 'avneeshsingh0704@gmail.com';\n                    passwordInput.value = 'Chupke1@';\n\n                    // Trigger input events to ensure the form recognizes the changes\n                    usernameInput.dispatchEvent(new Event('input', {\n                      bubbles: true\n                    }));\n                    passwordInput.dispatchEvent(new Event('input', {\n                      bubbles: true\n                    }));\n\n                    // Submit the form\n                    loginForm.submit();\n                  }\n                }\n              } catch (err) {\n                console.error('Error auto-filling GitHub credentials:', err);\n              }\n            });\n          }\n        }, 2000); // Wait 2 seconds for the window to load\n      } catch (err) {\n        console.error(\"Auto-login failed\", err);\n      }\n    } else {\n      // For non-GitHub applications, open the URL directly\n      const formattedUrl = app.app_url.startsWith('http') ? app.app_url : `https://${app.app_url}`;\n      window.open(formattedUrl, '_blank', 'noopener,noreferrer');\n    }\n  };\n  const handleManageApp = app => {\n    setSelectedApp(app);\n  };\n  const handleCloseModal = () => {\n    setSelectedApp(null);\n  };\n  const handleAppUpdate = (type, data) => {\n    if (type === 'role') {\n      if (data.action === 'add') {\n        const updatedApps = applications.map(app => app.app_id === selectedApp.app_id ? {\n          ...app,\n          roles: [...(app.roles || []), data.role]\n        } : app);\n        setApplications(updatedApps);\n        setSuccess('Role added successfully');\n      } else if (data.action === 'remove') {\n        const updatedApps = applications.map(app => app.app_id === selectedApp.app_id ? {\n          ...app,\n          roles: app.roles.filter(role => role !== data.role)\n        } : app);\n        setApplications(updatedApps);\n        setSuccess('Role removed successfully');\n      }\n    } else if (type === 'user') {\n      setSuccess('User assigned successfully');\n    }\n    setTimeout(() => setSuccess(null), 3000);\n  };\n  const handleDeleteApplication = async appId => {\n    if (window.confirm('Are you sure you want to delete this application? This action cannot be undone.')) {\n      try {\n        await api.deleteApplication(appId);\n        setApplications(applications.filter(app => app.app_id !== appId));\n        setSuccess('Application deleted successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        console.error('Error deleting application:', err);\n        setError(`Failed to delete application: ${err.message}`);\n      }\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading applications...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"application-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }, this), userType === 'admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-application-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add New Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newApp.name,\n          onChange: e => setNewApp({\n            ...newApp,\n            name: e.target.value\n          }),\n          placeholder: \"Application Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newApp.url,\n          onChange: e => setNewApp({\n            ...newApp,\n            url: e.target.value\n          }),\n          placeholder: \"Application URL (e.g., app.example.com)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newApp.roles,\n          onChange: e => setNewApp({\n            ...newApp,\n            roles: e.target.value\n          }),\n          placeholder: \"Roles (comma-separated)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddApplication,\n          children: \"Add Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), userType === 'app_admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-admin-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-role-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add New Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newRole.appId,\n          onChange: e => setNewRole({\n            ...newRole,\n            appId: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: app.app_id,\n            children: app.app_name\n          }, app.app_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newRole.roleName,\n          onChange: e => setNewRole({\n            ...newRole,\n            roleName: e.target.value\n          }),\n          placeholder: \"Role Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddRole(newRole.appId, newRole.roleName),\n          children: \"Add Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), userType === 'app_admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-admin-user-management-note\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"As an App Admin, you can assign users to your applications and manage their roles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"applications-list\",\n      children: applications.map(app => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"application-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"app-name\",\n            children: app.app_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), userType === 'app_admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app-roles\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Roles:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), (app.roles || []).map((role, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"role-tag\",\n              children: [role, /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-role\",\n                onClick: () => handleRemoveRole(app.app_id, role),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"access-button\",\n            onClick: () => handleAccessApp(app),\n            children: \"Access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), (userType === 'admin' || userType === 'app_admin') && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"manage-button\",\n            onClick: () => handleManageApp(app),\n            children: \"Manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), userType === 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDeleteApplication(app.app_id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)]\n      }, app.app_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), selectedApp && /*#__PURE__*/_jsxDEV(AppManagementModal, {\n      app: selectedApp,\n      userType: userType,\n      onClose: handleCloseModal,\n      onUpdate: handleAppUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s(ApplicationList, \"1nzsXj91xSnTfZedygR5Ix8xltw=\");\n_c = ApplicationList;\nexport default ApplicationList;\nvar _c;\n$RefreshReg$(_c, \"ApplicationList\");","map":{"version":3,"names":["React","useEffect","useState","api","AppManagementModal","jsxDEV","_jsxDEV","ApplicationList","userType","_s","applications","setApplications","newApp","setNewApp","name","url","roles","newRole","setNewRole","appId","roleName","loading","setLoading","error","setError","success","setSuccess","selectedApp","setSelectedApp","fetchApplications","console","log","data","getApplications","err","message","handleAddApplication","application","app_name","app_url","description","created_by","result","createApplication","setTimeout","handleAddRole","updatedApplications","map","app","app_id","parseInt","handleRemoveRole","roleToRemove","filter","role","handleAccessApp","includes","githubWindow","window","open","postMessage","type","credentials","username","password","addEventListener","loginForm","document","querySelector","usernameInput","passwordInput","value","dispatchEvent","Event","bubbles","submit","formattedUrl","startsWith","handleManageApp","handleCloseModal","handleAppUpdate","action","updatedApps","handleDeleteApplication","confirm","deleteApplication","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","placeholder","onClick","index","onClose","onUpdate","_c","$RefreshReg$"],"sources":["/Users/jaysingh/sample2/src/components/ApplicationList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/ApplicationList.css';\nimport AppManagementModal from './AppManagementModal';\n\nfunction ApplicationList({ userType }) {\n  const [applications, setApplications] = useState([]);\n  const [newApp, setNewApp] = useState({ name: '', url: '', roles: '' });\n  const [newRole, setNewRole] = useState({ appId: '', roleName: '' });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedApp, setSelectedApp] = useState(null);\n\n  useEffect(() => {\n    fetchApplications();\n  }, []);\n\n  const fetchApplications = async () => {\n    try {\n      console.log('Fetching applications...');\n      const data = await api.getApplications();\n      console.log('Received applications:', data);\n      setApplications(data);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching applications:', err);\n      setError(`Failed to fetch applications: ${err.message}`);\n      setLoading(false);\n    }\n  };\n\n  const handleAddApplication = async () => {\n    if (newApp.name && newApp.url) {\n      try {\n        const application = {\n          app_name: newApp.name,\n          app_url: newApp.url,\n          description: newApp.roles,\n          created_by: 2 // This should come from the logged-in user\n        };\n        \n        const result = await api.createApplication(application);\n        setApplications([...applications, result]);\n        setNewApp({ name: '', url: '', roles: '' });\n        setSuccess('Application added successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        console.error('Error adding application:', err);\n        setError(`Failed to add application: ${err.message}`);\n      }\n    } else {\n      setError('Please fill in all required fields');\n    }\n  };\n\n  const handleAddRole = async (appId, roleName) => {\n    if (!appId || !roleName) {\n      setError('Please select an application and enter a role name');\n      return;\n    }\n\n    try {\n      // This would be an API call to add a role\n      const updatedApplications = applications.map(app => \n        app.app_id === parseInt(appId)\n          ? { ...app, roles: [...(app.roles || []), roleName] }\n          : app\n      );\n      setApplications(updatedApplications);\n      setNewRole({ appId: '', roleName: '' });\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error adding role:', err);\n      setError(`Failed to add role: ${err.message}`);\n    }\n  };\n  \n  const handleRemoveRole = async (appId, roleToRemove) => {\n    try {\n      // This would be an API call to remove a role\n      const updatedApplications = applications.map(app =>\n        app.app_id === appId\n          ? { ...app, roles: (app.roles || []).filter(role => role !== roleToRemove) }\n          : app\n      );\n      setApplications(updatedApplications);\n      setSuccess('Role removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error removing role:', err);\n      setError(`Failed to remove role: ${err.message}`);\n    }\n  };\n\n  const handleAccessApp = async (app) => {\n    // Check if this is the Github App (by name or URL)\n    if (app.app_name === \"Github App\" || app.app_url.includes(\"github.com\")) {\n      try {\n        // Open GitHub in a new window\n        const githubWindow = window.open('https://github.com/login', '_blank', 'noopener,noreferrer');\n        \n        // Wait for the window to load\n        setTimeout(() => {\n          if (githubWindow) {\n            // Inject the credentials\n            githubWindow.postMessage({\n              type: 'AUTO_FILL_CREDENTIALS',\n              credentials: {\n                username: 'avneeshsingh0704@gmail.com',\n                password: 'Chupke1@'\n              }\n            }, 'https://github.com');\n\n            // Add event listener for the login form\n            githubWindow.addEventListener('load', () => {\n              try {\n                // Find and fill the login form\n                const loginForm = githubWindow.document.querySelector('form[action=\"/session\"]');\n                if (loginForm) {\n                  const usernameInput = loginForm.querySelector('input[name=\"login\"]');\n                  const passwordInput = loginForm.querySelector('input[name=\"password\"]');\n                  \n                  if (usernameInput && passwordInput) {\n                    usernameInput.value = 'avneeshsingh0704@gmail.com';\n                    passwordInput.value = 'Chupke1@';\n                    \n                    // Trigger input events to ensure the form recognizes the changes\n                    usernameInput.dispatchEvent(new Event('input', { bubbles: true }));\n                    passwordInput.dispatchEvent(new Event('input', { bubbles: true }));\n                    \n                    // Submit the form\n                    loginForm.submit();\n                  }\n                }\n              } catch (err) {\n                console.error('Error auto-filling GitHub credentials:', err);\n              }\n            });\n          }\n        }, 2000); // Wait 2 seconds for the window to load\n      } catch (err) {\n        console.error(\"Auto-login failed\", err);\n      }\n    } else {\n      // For non-GitHub applications, open the URL directly\n      const formattedUrl = app.app_url.startsWith('http') ? app.app_url : `https://${app.app_url}`;\n      window.open(formattedUrl, '_blank', 'noopener,noreferrer');\n    }\n  };\n\n  const handleManageApp = (app) => {\n    setSelectedApp(app);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedApp(null);\n  };\n\n  const handleAppUpdate = (type, data) => {\n    if (type === 'role') {\n      if (data.action === 'add') {\n        const updatedApps = applications.map(app =>\n          app.app_id === selectedApp.app_id\n            ? { ...app, roles: [...(app.roles || []), data.role] }\n            : app\n        );\n        setApplications(updatedApps);\n        setSuccess('Role added successfully');\n      } else if (data.action === 'remove') {\n        const updatedApps = applications.map(app =>\n          app.app_id === selectedApp.app_id\n            ? { ...app, roles: app.roles.filter(role => role !== data.role) }\n            : app\n        );\n        setApplications(updatedApps);\n        setSuccess('Role removed successfully');\n      }\n    } else if (type === 'user') {\n      setSuccess('User assigned successfully');\n    }\n    setTimeout(() => setSuccess(null), 3000);\n  };\n\n  const handleDeleteApplication = async (appId) => {\n    if (window.confirm('Are you sure you want to delete this application? This action cannot be undone.')) {\n      try {\n        await api.deleteApplication(appId);\n        setApplications(applications.filter(app => app.app_id !== appId));\n        setSuccess('Application deleted successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        console.error('Error deleting application:', err);\n        setError(`Failed to delete application: ${err.message}`);\n      }\n    }\n  };\n\n  if (loading) return <div className=\"loading\">Loading applications...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"application-list-container\">\n      <h3>Applications</h3>\n      \n      {success && <div className=\"success-message\">{success}</div>}\n      \n      {userType === 'admin' && (\n        <div className=\"admin-controls\">\n          <div className=\"add-application-form\">\n            <h4>Add New Application</h4>\n            <input\n              type=\"text\"\n              value={newApp.name}\n              onChange={(e) => setNewApp({ ...newApp, name: e.target.value })}\n              placeholder=\"Application Name\"\n            />\n            <input\n              type=\"text\"\n              value={newApp.url}\n              onChange={(e) => setNewApp({ ...newApp, url: e.target.value })}\n              placeholder=\"Application URL (e.g., app.example.com)\"\n            />\n            <input\n              type=\"text\"\n              value={newApp.roles}\n              onChange={(e) => setNewApp({ ...newApp, roles: e.target.value })}\n              placeholder=\"Roles (comma-separated)\"\n            />\n            <button onClick={handleAddApplication}>Add Application</button>\n          </div>\n        </div>\n      )}\n\n      {userType === 'app_admin' && (\n        <div className=\"app-admin-controls\">\n          <div className=\"add-role-form\">\n            <h4>Add New Role</h4>\n            <select\n              value={newRole.appId}\n              onChange={(e) => setNewRole({ ...newRole, appId: e.target.value })}\n            >\n              <option value=\"\">Select Application</option>\n              {applications.map(app => (\n                <option key={app.app_id} value={app.app_id}>{app.app_name}</option>\n              ))}\n            </select>\n            <input\n              type=\"text\"\n              value={newRole.roleName}\n              onChange={(e) => setNewRole({ ...newRole, roleName: e.target.value })}\n              placeholder=\"Role Name\"\n            />\n            <button onClick={() => handleAddRole(newRole.appId, newRole.roleName)}>Add Role</button>\n          </div>\n        </div>\n      )}\n\n      {userType === 'app_admin' && (\n        <div className=\"app-admin-user-management-note\">\n          <p>\n            As an App Admin, you can assign users to your applications and manage their roles.\n          </p>\n        </div>\n      )}\n\n      <ul className=\"applications-list\">\n        {applications.map((app) => (\n          <li key={app.app_id} className=\"application-item\">\n            <div className=\"app-info\">\n              <span className=\"app-name\">{app.app_name}</span>\n              {userType === 'app_admin' && (\n                <div className=\"app-roles\">\n                  <strong>Roles:</strong>\n                  {(app.roles || []).map((role, index) => (\n                    <span key={index} className=\"role-tag\">\n                      {role}\n                      <button \n                        className=\"remove-role\"\n                        onClick={() => handleRemoveRole(app.app_id, role)}\n                      >\n                        ×\n                      </button>\n                    </span>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className=\"app-actions\">\n              <button \n                className=\"access-button\"\n                onClick={() => handleAccessApp(app)}\n              >\n                Access\n              </button>\n              {(userType === 'admin' || userType === 'app_admin') && (\n                <button \n                  className=\"manage-button\" \n                  onClick={() => handleManageApp(app)}\n                >\n                  Manage\n                </button>\n              )}\n              {userType === 'admin' && (\n                <button \n                  className=\"delete-button\" \n                  onClick={() => handleDeleteApplication(app.app_id)}\n                >\n                  Delete\n                </button>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      {selectedApp && (\n        <AppManagementModal\n          app={selectedApp}\n          userType={userType}\n          onClose={handleCloseModal}\n          onUpdate={handleAppUpdate}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ApplicationList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}