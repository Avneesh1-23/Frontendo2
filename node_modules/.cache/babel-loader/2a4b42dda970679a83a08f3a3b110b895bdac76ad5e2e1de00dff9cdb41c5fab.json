{"ast":null,"code":"var _jsxFileName = \"/Users/jaysingh/sample2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Dashboard from './components/Dashboard';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport './styles/App.css';\nimport './styles/theme.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userType, setUserType] = useState(null);\n  const [isLogin, setIsLogin] = useState(true);\n  const [theme, setTheme] = useState(() => {\n    // Check if user has a saved theme preference\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme || 'light';\n  });\n  useEffect(() => {\n    // Check for existing token on mount\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user type\n      // This would typically be an API call to verify the token\n      // For now, we'll just check if it exists\n      setUserType('end'); // Default to end user if token exists\n    }\n  }, []);\n  useEffect(() => {\n    // Update document class when theme changes\n    document.documentElement.setAttribute('data-theme', theme);\n    // Save theme preference\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const handleLogin = type => {\n    setUserType(type);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUserType(null);\n  };\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  const switchToSignUp = () => {\n    setIsLogin(false);\n  };\n  const switchToLogin = () => {\n    setIsLogin(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"theme-toggle-button\",\n      onClick: toggleTheme,\n      title: `Switch to ${theme === 'light' ? 'dark' : 'light'} mode`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: theme === 'light' ? 'üåô' : '‚òÄÔ∏è'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), !userType ? isLogin ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin,\n      onSwitchToSignUp: switchToSignUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(SignUp, {\n      onSwitchToLogin: switchToLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n      userType: userType,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEKjIC0umUKXP7n03beW+R9qo14=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Dashboard","Login","SignUp","jsxDEV","_jsxDEV","App","_s","userType","setUserType","isLogin","setIsLogin","theme","setTheme","savedTheme","localStorage","getItem","token","document","documentElement","setAttribute","setItem","handleLogin","type","handleLogout","removeItem","toggleTheme","prevTheme","switchToSignUp","switchToLogin","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onSwitchToSignUp","onSwitchToLogin","onLogout","_c","$RefreshReg$"],"sources":["/Users/jaysingh/sample2/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Dashboard from './components/Dashboard';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport './styles/App.css';\nimport './styles/theme.css';\n\nfunction App() {\n  const [userType, setUserType] = useState(null);\n  const [isLogin, setIsLogin] = useState(true);\n  const [theme, setTheme] = useState(() => {\n    // Check if user has a saved theme preference\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme || 'light';\n  });\n\n  useEffect(() => {\n    // Check for existing token on mount\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user type\n      // This would typically be an API call to verify the token\n      // For now, we'll just check if it exists\n      setUserType('end'); // Default to end user if token exists\n    }\n  }, []);\n\n  useEffect(() => {\n    // Update document class when theme changes\n    document.documentElement.setAttribute('data-theme', theme);\n    // Save theme preference\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  const handleLogin = (type) => {\n    setUserType(type);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUserType(null);\n  };\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  const switchToSignUp = () => {\n    setIsLogin(false);\n  };\n\n  const switchToLogin = () => {\n    setIsLogin(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <button \n        className=\"theme-toggle-button\" \n        onClick={toggleTheme}\n        title={`Switch to ${theme === 'light' ? 'dark' : 'light'} mode`}\n      >\n        <span>{theme === 'light' ? 'üåô' : '‚òÄÔ∏è'}</span>\n      </button>\n      {!userType ? (\n        isLogin ? (\n          <Login onLogin={handleLogin} onSwitchToSignUp={switchToSignUp} />\n        ) : (\n          <SignUp onSwitchToLogin={switchToLogin} />\n        )\n      ) : (\n        <Dashboard \n          userType={userType} \n          onLogout={handleLogout} \n        />\n      )}\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}