{"ast":null,"code":"var _jsxFileName = \"/Users/jaysingh/sample2copy/src/components/AppAdminManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/AppAdminManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppAdminManagement({\n  onLogout\n}) {\n  _s();\n  const [applications, setApplications] = useState([]);\n  const [newAdmin, setNewAdmin] = useState({\n    username: '',\n    email: '',\n    selectedApps: []\n  });\n  const [appAdmins, setAppAdmins] = useState([]);\n  const [loadingAppAdmins, setLoadingAppAdmins] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  useEffect(() => {\n    fetchApplications();\n    fetchAppAdmins();\n  }, []);\n  const fetchApplications = async () => {\n    try {\n      const data = await api.getApplications();\n      setApplications(data);\n    } catch (err) {\n      setError('Failed to fetch applications');\n    }\n  };\n  const fetchAppAdmins = async () => {\n    try {\n      setLoadingAppAdmins(true);\n      console.log('Fetching app admins...');\n      const data = await api.get('/api/appadmins'); // Assuming api.get is available and the endpoint is /api/appadmins\n\n      // For now, keeping dummy data for structure, but this should be replaced\n      // const dummyAppAdmins = [\n      //     { user_id: 1, username: 'appadmin1', email: 'appadmin1@example.com', applications: [{ app_name: 'App A' }, { app_name: 'App B' }] },\n      //     { user_id: 2, username: 'appadmin2', email: 'appadmin2@example.com', applications: [{ app_name: 'App C' }] },\n      // ];\n      setAppAdmins(data); // Use data from API call\n\n      setLoadingAppAdmins(false);\n      setError(null); // Clear any previous error on successful fetch\n    } catch (err) {\n      console.error('Error fetching app admins:', err); // Improved logging\n      // Display error message\n      setLoadingAppAdmins(false);\n    }\n  };\n  const handleAddAppAdmin = async e => {\n    e.preventDefault();\n    if (!newAdmin.username || !newAdmin.email || newAdmin.selectedApps.length === 0) {\n      setError('Please fill in all fields and select at least one application');\n      return;\n    }\n    try {\n      const userData = {\n        username: newAdmin.username,\n        email: newAdmin.email,\n        password_hash: 'defaultPassword123',\n        user_type: 'app_admin'\n      };\n      const createdUser = await api.createUser(userData);\n      const assignmentPromises = newAdmin.selectedApps.map(appId => api.assignAppAdmin(createdUser.user_id, appId));\n      await Promise.all(assignmentPromises);\n      setSuccess('App admin added successfully with access to selected applications');\n      setNewAdmin({\n        username: '',\n        email: '',\n        selectedApps: []\n      });\n      fetchAppAdmins();\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error adding app admin:', err);\n      setTimeout(() => setError(null), 3000);\n    }\n  };\n  const handleAppSelection = appId => {\n    setNewAdmin(prev => {\n      const isSelected = prev.selectedApps.includes(appId);\n      return {\n        ...prev,\n        selectedApps: isSelected ? prev.selectedApps.filter(id => id !== appId) : [...prev.selectedApps, appId]\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-admin-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"App Admin Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New App Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddAppAdmin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newAdmin.username,\n            onChange: e => setNewAdmin({\n              ...newAdmin,\n              username: e.target.value\n            }),\n            placeholder: \"Username\",\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: newAdmin.email,\n            onChange: e => setNewAdmin({\n              ...newAdmin,\n              email: e.target.value\n            }),\n            placeholder: \"Email\",\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"applications-label\",\n            children: \"Select Applications:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"applications-grid\",\n            children: applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"application-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `app-${app.app_id}`,\n                checked: newAdmin.selectedApps.includes(app.app_id),\n                onChange: () => handleAppSelection(app.app_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `app-${app.app_id}`,\n                children: app.app_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, app.app_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add App Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(AppAdminManagement, \"CfDBFM5TKfGtAr7CKZX7Llb3GzM=\");\n_c = AppAdminManagement;\nexport default AppAdminManagement;\nvar _c;\n$RefreshReg$(_c, \"AppAdminManagement\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","AppAdminManagement","onLogout","_s","applications","setApplications","newAdmin","setNewAdmin","username","email","selectedApps","appAdmins","setAppAdmins","loadingAppAdmins","setLoadingAppAdmins","error","setError","success","setSuccess","fetchApplications","fetchAppAdmins","data","getApplications","err","console","log","get","handleAddAppAdmin","e","preventDefault","length","userData","password_hash","user_type","createdUser","createUser","assignmentPromises","map","appId","assignAppAdmin","user_id","Promise","all","setTimeout","handleAppSelection","prev","isSelected","includes","filter","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","app","app_id","checked","htmlFor","app_name","_c","$RefreshReg$"],"sources":["/Users/jaysingh/sample2copy/src/components/AppAdminManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/AppAdminManagement.css';\n\nfunction AppAdminManagement({ onLogout }) {\n  const [applications, setApplications] = useState([]);\n  const [newAdmin, setNewAdmin] = useState({\n    username: '',\n    email: '',\n    selectedApps: []\n  });\n  const [appAdmins, setAppAdmins] = useState([]);\n  const [loadingAppAdmins, setLoadingAppAdmins] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n    fetchApplications();\n    fetchAppAdmins();\n  }, []);\n\n  const fetchApplications = async () => {\n    try {\n      const data = await api.getApplications();\n      setApplications(data);\n    } catch (err) {\n      setError('Failed to fetch applications');\n    }\n  };\n\n  const fetchAppAdmins = async () => {\n    try {\n      setLoadingAppAdmins(true);\n      console.log('Fetching app admins...');\n\n      const data = await api.get('/api/appadmins'); // Assuming api.get is available and the endpoint is /api/appadmins\n      \n      // For now, keeping dummy data for structure, but this should be replaced\n      // const dummyAppAdmins = [\n      //     { user_id: 1, username: 'appadmin1', email: 'appadmin1@example.com', applications: [{ app_name: 'App A' }, { app_name: 'App B' }] },\n      //     { user_id: 2, username: 'appadmin2', email: 'appadmin2@example.com', applications: [{ app_name: 'App C' }] },\n      // ];\n      setAppAdmins(data); // Use data from API call\n      \n      setLoadingAppAdmins(false);\n      setError(null); // Clear any previous error on successful fetch\n    } catch (err) {\n      console.error('Error fetching app admins:', err); // Improved logging\n       // Display error message\n      setLoadingAppAdmins(false);\n    }\n  };\n\n  const handleAddAppAdmin = async (e) => {\n    e.preventDefault();\n    if (!newAdmin.username || !newAdmin.email || newAdmin.selectedApps.length === 0) {\n      setError('Please fill in all fields and select at least one application');\n      return;\n    }\n\n    try {\n      const userData = {\n        username: newAdmin.username,\n        email: newAdmin.email,\n        password_hash: 'defaultPassword123',\n        user_type: 'app_admin'\n      };\n\n      const createdUser = await api.createUser(userData);\n      \n      const assignmentPromises = newAdmin.selectedApps.map(appId => \n        api.assignAppAdmin(createdUser.user_id, appId)\n      );\n      await Promise.all(assignmentPromises);\n\n      setSuccess('App admin added successfully with access to selected applications');\n      setNewAdmin({ username: '', email: '', selectedApps: [] });\n      fetchAppAdmins();\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error adding app admin:', err);\n      \n      setTimeout(() => setError(null), 3000);\n    }\n  };\n\n  const handleAppSelection = (appId) => {\n    setNewAdmin(prev => {\n      const isSelected = prev.selectedApps.includes(appId);\n      return {\n        ...prev,\n        selectedApps: isSelected\n          ? prev.selectedApps.filter(id => id !== appId)\n          : [...prev.selectedApps, appId]\n      };\n    });\n  };\n\n  return (\n    <div className=\"app-admin-management\">\n      <h2>App Admin Management</h2>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      {success && <div className=\"success-message\">{success}</div>}\n\n      <div className=\"add-admin-section\">\n        <h3>Add New App Admin</h3>\n        <form onSubmit={handleAddAppAdmin}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              value={newAdmin.username}\n              onChange={(e) => setNewAdmin({ ...newAdmin, username: e.target.value })}\n              placeholder=\"Username\"\n              className=\"input-field\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              value={newAdmin.email}\n              onChange={(e) => setNewAdmin({ ...newAdmin, email: e.target.value })}\n              placeholder=\"Email\"\n              className=\"input-field\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"applications-label\">Select Applications:</label>\n            <div className=\"applications-grid\">\n              {applications.map(app => (\n                <div key={app.app_id} className=\"application-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    id={`app-${app.app_id}`}\n                    checked={newAdmin.selectedApps.includes(app.app_id)}\n                    onChange={() => handleAppSelection(app.app_id)}\n                  />\n                  <label htmlFor={`app-${app.app_id}`}>{app.app_name}</label>\n                </div>\n              ))}\n            </div>\n          </div>\n          <button type=\"submit\">Add App Admin</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default AppAdminManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}