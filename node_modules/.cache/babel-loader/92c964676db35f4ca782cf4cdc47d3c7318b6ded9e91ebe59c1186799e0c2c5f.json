{"ast":null,"code":"var _jsxFileName = \"/Users/jaysingh/sample2/src/components/GitHubCallback.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserData, handleGitHubCallback } from '../services/githubAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GitHubCallback = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleCallback = async () => {\n      const urlParams = new URLSearchParams(window.location.search);\n      const code = urlParams.get('code');\n      if (!code) {\n        setError('No code received from GitHub');\n        return;\n      }\n      try {\n        const accessToken = await handleGitHubCallback(code);\n        const userData = await getUserData(accessToken);\n\n        // Store the token and user data in localStorage or your preferred state management solution\n        localStorage.setItem('githubToken', accessToken);\n        localStorage.setItem('userData', JSON.stringify(userData));\n\n        // Redirect to dashboard or home page\n        navigate('/dashboard');\n      } catch (err) {\n        setError('Failed to authenticate with GitHub');\n        console.error(err);\n      }\n    };\n    handleCallback();\n  }, [navigate]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Authenticating with GitHub...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n_s(GitHubCallback, \"S97YeATJ+8xJ4yPil4tpqooM9lc=\", false, function () {\n  return [useNavigate];\n});\n_c = GitHubCallback;\nexport default GitHubCallback;\nvar _c;\n$RefreshReg$(_c, \"GitHubCallback\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getUserData","handleGitHubCallback","jsxDEV","_jsxDEV","GitHubCallback","_s","error","setError","navigate","handleCallback","urlParams","URLSearchParams","window","location","search","code","get","accessToken","userData","localStorage","setItem","JSON","stringify","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaysingh/sample2/src/components/GitHubCallback.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserData, handleGitHubCallback } from '../services/githubAuth';\n\nconst GitHubCallback = () => {\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const handleCallback = async () => {\n      const urlParams = new URLSearchParams(window.location.search);\n      const code = urlParams.get('code');\n\n      if (!code) {\n        setError('No code received from GitHub');\n        return;\n      }\n\n      try {\n        const accessToken = await handleGitHubCallback(code);\n        const userData = await getUserData(accessToken);\n        \n        // Store the token and user data in localStorage or your preferred state management solution\n        localStorage.setItem('githubToken', accessToken);\n        localStorage.setItem('userData', JSON.stringify(userData));\n        \n        // Redirect to dashboard or home page\n        navigate('/dashboard');\n      } catch (err) {\n        setError('Failed to authenticate with GitHub');\n        console.error(err);\n      }\n    };\n\n    handleCallback();\n  }, [navigate]);\n\n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n\n  return <div>Authenticating with GitHub...</div>;\n};\n\nexport default GitHubCallback; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,oBAAoB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;MAC7D,MAAMC,IAAI,GAAGL,SAAS,CAACM,GAAG,CAAC,MAAM,CAAC;MAElC,IAAI,CAACD,IAAI,EAAE;QACTR,QAAQ,CAAC,8BAA8B,CAAC;QACxC;MACF;MAEA,IAAI;QACF,MAAMU,WAAW,GAAG,MAAMhB,oBAAoB,CAACc,IAAI,CAAC;QACpD,MAAMG,QAAQ,GAAG,MAAMlB,WAAW,CAACiB,WAAW,CAAC;;QAE/C;QACAE,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,WAAW,CAAC;QAChDE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;;QAE1D;QACAV,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,CAAC,OAAOe,GAAG,EAAE;QACZhB,QAAQ,CAAC,oCAAoC,CAAC;QAC9CiB,OAAO,CAAClB,KAAK,CAACiB,GAAG,CAAC;MACpB;IACF,CAAC;IAEDd,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,IAAIF,KAAK,EAAE;IACT,oBAAOH,OAAA;MAAKsB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACrD;EAEA,oBAAO3B,OAAA;IAAAuB,QAAA,EAAK;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACjD,CAAC;AAACzB,EAAA,CAtCID,cAAc;EAAA,QAEDL,WAAW;AAAA;AAAAgC,EAAA,GAFxB3B,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}