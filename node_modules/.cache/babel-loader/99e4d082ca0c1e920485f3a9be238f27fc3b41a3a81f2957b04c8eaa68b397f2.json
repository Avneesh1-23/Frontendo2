{"ast":null,"code":"var _jsxFileName = \"/Users/jaysingh/Frontendo/src/components/AppManagementModal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/AppManagementModal.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AppManagementModal({\n  app,\n  userType,\n  onClose,\n  onUpdate,\n  isAdminOnly\n}) {\n  _s();\n  var _app$roles, _app$roles2;\n  const [activeTab, setActiveTab] = useState(isAdminOnly ? 'settings' : 'roles');\n  const [newRole, setNewRole] = useState({\n    name: '',\n    password: ''\n  });\n  const [selectedUser, setSelectedUser] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [settings, setSettings] = useState({\n    name: app.app_name,\n    url: app.app_url,\n    description: app.description || ''\n  });\n\n  // Get end users from localStorage\n  const [endUsers, setEndUsers] = useState([]);\n  useEffect(() => {\n    const savedUsers = localStorage.getItem('endUsers');\n    if (savedUsers) {\n      setEndUsers(JSON.parse(savedUsers));\n    }\n  }, []);\n\n  // Get users assigned to this app\n  const assignedUsers = endUsers.filter(user => user.assignments.some(assignment => assignment.app_id === app.app_id));\n\n  // Get available users (not assigned to this app)\n  const availableUsers = endUsers.filter(user => !user.assignments.some(assignment => assignment.app_id === app.app_id));\n  const handleAddRole = () => {\n    if (newRole.name.trim() && newRole.password.trim()) {\n      onUpdate('role', {\n        action: 'add',\n        role: newRole.name,\n        password: newRole.password\n      });\n      setNewRole({\n        name: '',\n        password: ''\n      });\n    }\n  };\n  const handleRemoveRole = role => {\n    onUpdate('role', {\n      action: 'remove',\n      role\n    });\n  };\n  const handleAssignUser = () => {\n    if (selectedUser && selectedRole) {\n      // Find the user to assign\n      const userToAssign = endUsers.find(user => user.user_id === parseInt(selectedUser));\n      if (!userToAssign) return;\n\n      // Create new assignment\n      const newAssignment = {\n        app_id: app.app_id,\n        app_name: app.app_name,\n        role_id: selectedRole,\n        role_name: selectedRole\n      };\n\n      // Update user's assignments\n      const updatedUser = {\n        ...userToAssign,\n        assignments: [...userToAssign.assignments, newAssignment]\n      };\n\n      // Update endUsers state\n      const updatedUsers = endUsers.map(user => user.user_id === updatedUser.user_id ? updatedUser : user);\n      setEndUsers(updatedUsers);\n\n      // Update localStorage\n      localStorage.setItem('endUsers', JSON.stringify(updatedUsers));\n\n      // Notify parent component\n      onUpdate('user', {\n        action: 'assign',\n        user: selectedUser,\n        role: selectedRole\n      });\n\n      // Reset form\n      setSelectedUser('');\n      setSelectedRole('');\n    }\n  };\n  const handleRemoveUser = userId => {\n    // Find the user to remove\n    const userToUpdate = endUsers.find(user => user.user_id === userId);\n    if (!userToUpdate) return;\n\n    // Remove the assignment for this app\n    const updatedUser = {\n      ...userToUpdate,\n      assignments: userToUpdate.assignments.filter(assignment => assignment.app_id !== app.app_id)\n    };\n\n    // Update endUsers state\n    const updatedUsers = endUsers.map(user => user.user_id === updatedUser.user_id ? updatedUser : user);\n    setEndUsers(updatedUsers);\n\n    // Update localStorage\n    localStorage.setItem('endUsers', JSON.stringify(updatedUsers));\n\n    // Notify parent component\n    onUpdate('user', {\n      action: 'remove',\n      userId\n    });\n  };\n  const handleSettingsChange = (field, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSaveSettings = () => {\n    onUpdate('settings', {\n      ...settings,\n      save: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Manage \", app.app_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-tabs\",\n        children: [!isAdminOnly && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-button ${activeTab === 'roles' ? 'active' : ''}`,\n            onClick: () => setActiveTab('roles'),\n            children: \"Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-button ${activeTab === 'users' ? 'active' : ''}`,\n            onClick: () => setActiveTab('users'),\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isAdminOnly && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'settings' ? 'active' : ''}`,\n          onClick: () => setActiveTab('settings'),\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [isAdminOnly && activeTab === 'settings' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Application Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Application Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: settings.name,\n              onChange: e => handleSettingsChange('name', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Application URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: settings.url,\n              onChange: e => handleSettingsChange('url', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: settings.description,\n              onChange: e => handleSettingsChange('description', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), !isAdminOnly && activeTab === 'roles' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roles-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Manage Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-role-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newRole.name,\n              onChange: e => setNewRole({\n                ...newRole,\n                name: e.target.value\n              }),\n              placeholder: \"Enter new role name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: newRole.password,\n              onChange: e => setNewRole({\n                ...newRole,\n                password: e.target.value\n              }),\n              placeholder: \"Enter role password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddRole,\n              children: \"Add Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roles-list\",\n            children: (_app$roles = app.roles) === null || _app$roles === void 0 ? void 0 : _app$roles.map((role, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"role-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: role.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-role\",\n                onClick: () => handleRemoveRole(role.name),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), !isAdminOnly && activeTab === 'users' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Manage Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assign-user-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedUser,\n              onChange: e => setSelectedUser(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), availableUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: user.user_id,\n                children: [user.username, \" (\", user.email, \")\"]\n              }, user.user_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedRole,\n              onChange: e => setSelectedRole(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), (_app$roles2 = app.roles) === null || _app$roles2 === void 0 ? void 0 : _app$roles2.map((role, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role,\n                children: role\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAssignUser,\n              children: \"Assign User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"users-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Assigned Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"assigned-users-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Username\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Role\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: assignedUsers.map(user => {\n                  const assignment = user.assignments.find(a => a.app_id === app.app_id);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: user.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: user.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"role-badge\",\n                        children: (assignment === null || assignment === void 0 ? void 0 : assignment.role_name) || 'Not Set'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"remove-user-button\",\n                        onClick: () => handleRemoveUser(user.user_id),\n                        children: \"Remove\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 27\n                    }, this)]\n                  }, user.user_id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [isAdminOnly ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSaveSettings,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: onClose,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(AppManagementModal, \"2pZBio16Wc7dnLwT5rMQGuHWzO0=\");\n_c = AppManagementModal;\nexport default AppManagementModal;\nvar _c;\n$RefreshReg$(_c, \"AppManagementModal\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AppManagementModal","app","userType","onClose","onUpdate","isAdminOnly","_s","_app$roles","_app$roles2","activeTab","setActiveTab","newRole","setNewRole","name","password","selectedUser","setSelectedUser","selectedRole","setSelectedRole","settings","setSettings","app_name","url","app_url","description","endUsers","setEndUsers","savedUsers","localStorage","getItem","JSON","parse","assignedUsers","filter","user","assignments","some","assignment","app_id","availableUsers","handleAddRole","trim","action","role","handleRemoveRole","handleAssignUser","userToAssign","find","user_id","parseInt","newAssignment","role_id","role_name","updatedUser","updatedUsers","map","setItem","stringify","handleRemoveUser","userId","userToUpdate","handleSettingsChange","field","value","prev","handleSaveSettings","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","placeholder","roles","index","username","email","a","_c","$RefreshReg$"],"sources":["/Users/jaysingh/Frontendo/src/components/AppManagementModal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/AppManagementModal.css';\n\nfunction AppManagementModal({ app, userType, onClose, onUpdate, isAdminOnly }) {\n  const [activeTab, setActiveTab] = useState(isAdminOnly ? 'settings' : 'roles');\n  const [newRole, setNewRole] = useState({\n    name: '',\n    password: ''\n  });\n  const [selectedUser, setSelectedUser] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [settings, setSettings] = useState({\n    name: app.app_name,\n    url: app.app_url,\n    description: app.description || ''\n  });\n\n  // Get end users from localStorage\n  const [endUsers, setEndUsers] = useState([]);\n  useEffect(() => {\n    const savedUsers = localStorage.getItem('endUsers');\n    if (savedUsers) {\n      setEndUsers(JSON.parse(savedUsers));\n    }\n  }, []);\n\n  // Get users assigned to this app\n  const assignedUsers = endUsers.filter(user => \n    user.assignments.some(assignment => assignment.app_id === app.app_id)\n  );\n\n  // Get available users (not assigned to this app)\n  const availableUsers = endUsers.filter(user => \n    !user.assignments.some(assignment => assignment.app_id === app.app_id)\n  );\n\n  const handleAddRole = () => {\n    if (newRole.name.trim() && newRole.password.trim()) {\n      onUpdate('role', { \n        action: 'add', \n        role: newRole.name,\n        password: newRole.password \n      });\n      setNewRole({ name: '', password: '' });\n    }\n  };\n\n  const handleRemoveRole = (role) => {\n    onUpdate('role', { action: 'remove', role });\n  };\n\n  const handleAssignUser = () => {\n    if (selectedUser && selectedRole) {\n      // Find the user to assign\n      const userToAssign = endUsers.find(user => user.user_id === parseInt(selectedUser));\n      if (!userToAssign) return;\n\n      // Create new assignment\n      const newAssignment = {\n        app_id: app.app_id,\n        app_name: app.app_name,\n        role_id: selectedRole,\n        role_name: selectedRole\n      };\n\n      // Update user's assignments\n      const updatedUser = {\n        ...userToAssign,\n        assignments: [...userToAssign.assignments, newAssignment]\n      };\n\n      // Update endUsers state\n      const updatedUsers = endUsers.map(user => \n        user.user_id === updatedUser.user_id ? updatedUser : user\n      );\n      setEndUsers(updatedUsers);\n\n      // Update localStorage\n      localStorage.setItem('endUsers', JSON.stringify(updatedUsers));\n\n      // Notify parent component\n      onUpdate('user', { \n        action: 'assign', \n        user: selectedUser, \n        role: selectedRole\n      });\n\n      // Reset form\n      setSelectedUser('');\n      setSelectedRole('');\n    }\n  };\n\n  const handleRemoveUser = (userId) => {\n    // Find the user to remove\n    const userToUpdate = endUsers.find(user => user.user_id === userId);\n    if (!userToUpdate) return;\n\n    // Remove the assignment for this app\n    const updatedUser = {\n      ...userToUpdate,\n      assignments: userToUpdate.assignments.filter(\n        assignment => assignment.app_id !== app.app_id\n      )\n    };\n\n    // Update endUsers state\n    const updatedUsers = endUsers.map(user => \n      user.user_id === updatedUser.user_id ? updatedUser : user\n    );\n    setEndUsers(updatedUsers);\n\n    // Update localStorage\n    localStorage.setItem('endUsers', JSON.stringify(updatedUsers));\n\n    // Notify parent component\n    onUpdate('user', {\n      action: 'remove',\n      userId\n    });\n  };\n\n  const handleSettingsChange = (field, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleSaveSettings = () => {\n    onUpdate('settings', {\n      ...settings,\n      save: true\n    });\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h3>Manage {app.app_name}</h3>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n\n        <div className=\"modal-tabs\">\n          {!isAdminOnly && (\n            <>\n              <button \n                className={`tab-button ${activeTab === 'roles' ? 'active' : ''}`}\n                onClick={() => setActiveTab('roles')}\n              >\n                Roles\n              </button>\n              <button \n                className={`tab-button ${activeTab === 'users' ? 'active' : ''}`}\n                onClick={() => setActiveTab('users')}\n              >\n                Users\n              </button>\n            </>\n          )}\n          {isAdminOnly && (\n            <button \n              className={`tab-button ${activeTab === 'settings' ? 'active' : ''}`}\n              onClick={() => setActiveTab('settings')}\n            >\n              Settings\n            </button>\n          )}\n        </div>\n\n        <div className=\"modal-body\">\n          {isAdminOnly && activeTab === 'settings' && (\n            <div className=\"settings-section\">\n              <h4>Application Settings</h4>\n              <div className=\"setting-item\">\n                <label>Application Name:</label>\n                <input \n                  type=\"text\" \n                  value={settings.name}\n                  onChange={(e) => handleSettingsChange('name', e.target.value)}\n                />\n              </div>\n              <div className=\"setting-item\">\n                <label>Application URL:</label>\n                <input \n                  type=\"text\" \n                  value={settings.url}\n                  onChange={(e) => handleSettingsChange('url', e.target.value)}\n                />\n              </div>\n              <div className=\"setting-item\">\n                <label>Description:</label>\n                <textarea \n                  value={settings.description}\n                  onChange={(e) => handleSettingsChange('description', e.target.value)}\n                />\n              </div>\n            </div>\n          )}\n\n          {!isAdminOnly && activeTab === 'roles' && (\n            <div className=\"roles-section\">\n              <h4>Manage Roles</h4>\n              <div className=\"add-role-form\">\n                <input\n                  type=\"text\"\n                  value={newRole.name}\n                  onChange={(e) => setNewRole({ ...newRole, name: e.target.value })}\n                  placeholder=\"Enter new role name\"\n                />\n                <input\n                  type=\"password\"\n                  value={newRole.password}\n                  onChange={(e) => setNewRole({ ...newRole, password: e.target.value })}\n                  placeholder=\"Enter role password\"\n                />\n                <button onClick={handleAddRole}>Add Role</button>\n              </div>\n              <div className=\"roles-list\">\n                {app.roles?.map((role, index) => (\n                  <div key={index} className=\"role-item\">\n                    <span>{role.name}</span>\n                    <button \n                      className=\"remove-role\"\n                      onClick={() => handleRemoveRole(role.name)}\n                    >\n                      ×\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {!isAdminOnly && activeTab === 'users' && (\n            <div className=\"users-section\">\n              <h4>Manage Users</h4>\n              <div className=\"assign-user-form\">\n                <select\n                  value={selectedUser}\n                  onChange={(e) => setSelectedUser(e.target.value)}\n                >\n                  <option value=\"\">Select User</option>\n                  {availableUsers.map(user => (\n                    <option key={user.user_id} value={user.user_id}>\n                      {user.username} ({user.email})\n                    </option>\n                  ))}\n                </select>\n                <select\n                  value={selectedRole}\n                  onChange={(e) => setSelectedRole(e.target.value)}\n                >\n                  <option value=\"\">Select Role</option>\n                  {app.roles?.map((role, index) => (\n                    <option key={index} value={role}>{role}</option>\n                  ))}\n                </select>\n                <button onClick={handleAssignUser}>Assign User</button>\n              </div>\n              <div className=\"users-list\">\n                <h5>Assigned Users</h5>\n                <table className=\"assigned-users-table\">\n                  <thead>\n                    <tr>\n                      <th>Username</th>\n                      <th>Email</th>\n                      <th>Role</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {assignedUsers.map(user => {\n                      const assignment = user.assignments.find(a => a.app_id === app.app_id);\n                      return (\n                        <tr key={user.user_id}>\n                          <td>{user.username}</td>\n                          <td>{user.email}</td>\n                          <td>\n                            <span className=\"role-badge\">{assignment?.role_name || 'Not Set'}</span>\n                          </td>\n                          <td>\n                            <button\n                              className=\"remove-user-button\"\n                              onClick={() => handleRemoveUser(user.user_id)}\n                            >\n                              Remove\n                            </button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"modal-footer\">\n          {isAdminOnly ? (\n            <button className=\"save-button\" onClick={handleSaveSettings}>\n              Save Changes\n            </button>\n          ) : (\n            <button className=\"save-button\" onClick={onClose}>\n              Done\n            </button>\n          )}\n          <button className=\"cancel-button\" onClick={onClose}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AppManagementModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}