{"ast":null,"code":"var _jsxFileName = \"/Users/jaysingh/sample2copy/src/components/UserManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/UserManagement.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserManagement({\n  isAppAdmin,\n  onLogout\n}) {\n  _s();\n  var _applications$find, _applications$find2;\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [selectedApp, setSelectedApp] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch users data\n      const usersData = await api.getUsers();\n\n      // Fetch applications data based on user type\n      let appsData = [];\n      if (isAppAdmin) {\n        try {\n          appsData = await api.getAppAdminApplications();\n        } catch (appError) {\n          console.error('Error fetching app admin applications:', appError);\n        }\n      } else {\n        appsData = await api.getApplications();\n      }\n\n      // Process and combine the data\n      const processedUsers = usersData.map(user => ({\n        ...user,\n        assignedApps: user.assignedApps || []\n      }));\n      setUsers(processedUsers);\n      setApplications(appsData);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error in fetchData:', err);\n      setError('Failed to fetch data. Please try again later.');\n      setLoading(false);\n    }\n  };\n  const handleAddUser = async () => {\n    if (newUser.trim() && newUserEmail.trim() && selectedApp && selectedRole) {\n      try {\n        // First create the user\n        const user = await api.createUser({\n          username: newUser,\n          email: newUserEmail,\n          password_hash: 'defaultPassword123',\n          user_type: 'end'\n        });\n\n        // Assign the user to the selected application\n        await api.assignUserToApplication(user.user_id, selectedApp, selectedRole);\n\n        // Refresh the users list\n        await fetchData();\n\n        // Clear the form\n        setNewUser('');\n        setNewUserEmail('');\n        setSelectedRole('');\n        setSuccess('User added successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error creating user:', err);\n        setError('Failed to add user: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      }\n    } else {\n      setError('Please fill in all fields');\n    }\n  };\n  const handleAssignApp = async (userId, appId, role) => {\n    try {\n      await api.assignUserToApplication(userId, appId, role);\n      const updatedUsers = users.map(user => user.id === userId ? {\n        ...user,\n        assignedApps: [...user.assignedApps, {\n          appId,\n          role\n        }]\n      } : user);\n      setUsers(updatedUsers);\n      setSuccess('User assigned successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to assign user');\n    }\n  };\n  const handleRemoveAssignment = async (userId, appId) => {\n    try {\n      await api.removeUserFromApplication(userId, appId);\n      const updatedUsers = users.map(user => user.id === userId ? {\n        ...user,\n        assignedApps: user.assignedApps.filter(app => app.appId !== appId)\n      } : user);\n      setUsers(updatedUsers);\n      setSuccess('Assignment removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to remove assignment');\n    }\n  };\n  const handleAddRole = async (appId, roleName) => {\n    try {\n      await api.createRole({\n        app_id: appId,\n        role_name: roleName\n      });\n      const updatedApps = applications.map(app => app.id === appId ? {\n        ...app,\n        roles: [...app.roles, roleName]\n      } : app);\n      setApplications(updatedApps);\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to add role');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-management-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: onLogout,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }, this), isAppAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"application-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Select Application to Add Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedApp,\n          onChange: e => {\n            setSelectedApp(e.target.value);\n            setSelectedRole(''); // Reset role when app changes\n          },\n          className: \"app-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose an Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: app.id,\n            children: app.app_name\n          }, app.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), selectedApp && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-user-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Add User to \", (_applications$find = applications.find(app => app.id === selectedApp)) === null || _applications$find === void 0 ? void 0 : _applications$find.app_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newUser,\n          onChange: e => setNewUser(e.target.value),\n          placeholder: \"Enter new user name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: newUserEmail,\n          onChange: e => setNewUserEmail(e.target.value),\n          placeholder: \"Enter user email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRole,\n          onChange: e => setSelectedRole(e.target.value),\n          className: \"role-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), (_applications$find2 = applications.find(app => app.id === selectedApp)) === null || _applications$find2 === void 0 ? void 0 : _applications$find2.roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: role,\n            children: role\n          }, role, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddUser,\n          className: \"add-user-button\",\n          children: \"Add End User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-user-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newUser,\n          onChange: e => setNewUser(e.target.value),\n          placeholder: \"Enter new user name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: newUserEmail,\n          onChange: e => setNewUserEmail(e.target.value),\n          placeholder: \"Enter user email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddUser,\n          children: \"Add App Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Current Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: users.map(user => {\n            var _user$assignedApps;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-name\",\n                  children: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-email\",\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-type\",\n                  children: user.user_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-assignments\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Assigned Applications:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 23\n                  }, this), ((_user$assignedApps = user.assignedApps) === null || _user$assignedApps === void 0 ? void 0 : _user$assignedApps.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"assignments-list\",\n                    children: user.assignedApps.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"assignment-tag\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"app-name\",\n                        children: assignment.appName || 'Unknown App'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"role-name\",\n                        children: [\"(\", assignment.role || 'No Role', \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 250,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"remove-assignment\",\n                        onClick: () => handleRemoveAssignment(user.user_id, assignment.appId),\n                        title: \"Remove Assignment\",\n                        children: \"\\xD7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"no-assignments\",\n                    children: \"No applications assigned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"assignment-controls\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => {\n                    const [appId, role] = e.target.value.split('|');\n                    handleAssignApp(user.user_id, appId, role);\n                    e.target.value = '';\n                  },\n                  defaultValue: \"\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Assign to Application\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 23\n                  }, this), applications.map(app => (app.roles || []).map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: `${app.id}|${role}`,\n                    children: [app.app_name, \" - \", role]\n                  }, `${app.id}-${role}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 27\n                  }, this)))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, user.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isAppAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"role-management\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Manage Roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-roles\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: app.app_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-role-form\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New role name\",\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                handleAddRole(app.id, e.target.value);\n                e.target.value = '';\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"role-list\",\n          children: (app.roles || []).map((role, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"role-tag\",\n            children: role\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this)]\n      }, app.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(UserManagement, \"T2HSZE1beL4A8T8CjVTMZxkXmtA=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManagement","isAppAdmin","onLogout","_s","_applications$find","_applications$find2","users","setUsers","newUser","setNewUser","newUserEmail","setNewUserEmail","selectedApp","setSelectedApp","selectedRole","setSelectedRole","applications","setApplications","loading","setLoading","error","setError","success","setSuccess","fetchData","usersData","getUsers","appsData","getAppAdminApplications","appError","console","getApplications","processedUsers","map","user","assignedApps","err","handleAddUser","trim","createUser","username","email","password_hash","user_type","assignUserToApplication","user_id","setTimeout","_err$response","_err$response$data","response","data","message","handleAssignApp","userId","appId","role","updatedUsers","id","handleRemoveAssignment","removeUserFromApplication","filter","app","handleAddRole","roleName","createRole","app_id","role_name","updatedApps","roles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","app_name","find","type","placeholder","_user$assignedApps","length","assignment","index","appName","title","split","defaultValue","disabled","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/jaysingh/sample2copy/src/components/UserManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/UserManagement.css';\n\nfunction UserManagement({ isAppAdmin, onLogout }) {\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [selectedApp, setSelectedApp] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Fetch users data\n      const usersData = await api.getUsers();\n      \n      // Fetch applications data based on user type\n      let appsData = [];\n      if (isAppAdmin) {\n        try {\n          appsData = await api.getAppAdminApplications();\n        } catch (appError) {\n          console.error('Error fetching app admin applications:', appError);\n        }\n      } else {\n        appsData = await api.getApplications();\n      }\n\n      // Process and combine the data\n      const processedUsers = usersData.map(user => ({\n        ...user,\n        assignedApps: user.assignedApps || []\n      }));\n\n      setUsers(processedUsers);\n      setApplications(appsData);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error in fetchData:', err);\n      setError('Failed to fetch data. Please try again later.');\n      setLoading(false);\n    }\n  };\n\n  const handleAddUser = async () => {\n    if (newUser.trim() && newUserEmail.trim() && selectedApp && selectedRole) {\n      try {\n        // First create the user\n        const user = await api.createUser({\n          username: newUser,\n          email: newUserEmail,\n          password_hash: 'defaultPassword123',\n          user_type: 'end'\n        });\n\n        // Assign the user to the selected application\n        await api.assignUserToApplication(user.user_id, selectedApp, selectedRole);\n\n        // Refresh the users list\n        await fetchData();\n        \n        // Clear the form\n        setNewUser('');\n        setNewUserEmail('');\n        setSelectedRole('');\n        \n        setSuccess('User added successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        console.error('Error creating user:', err);\n        setError('Failed to add user: ' + (err.response?.data?.message || err.message));\n      }\n    } else {\n      setError('Please fill in all fields');\n    }\n  };\n\n  const handleAssignApp = async (userId, appId, role) => {\n    try {\n      await api.assignUserToApplication(userId, appId, role);\n      const updatedUsers = users.map(user => \n        user.id === userId \n          ? { \n              ...user, \n              assignedApps: [...user.assignedApps, { appId, role }] \n            } \n          : user\n      );\n      setUsers(updatedUsers);\n      setSuccess('User assigned successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to assign user');\n    }\n  };\n\n  const handleRemoveAssignment = async (userId, appId) => {\n    try {\n      await api.removeUserFromApplication(userId, appId);\n      const updatedUsers = users.map(user =>\n        user.id === userId\n          ? {\n              ...user,\n              assignedApps: user.assignedApps.filter(app => app.appId !== appId)\n            }\n          : user\n      );\n      setUsers(updatedUsers);\n      setSuccess('Assignment removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to remove assignment');\n    }\n  };\n\n  const handleAddRole = async (appId, roleName) => {\n    try {\n      await api.createRole({\n        app_id: appId,\n        role_name: roleName\n      });\n      const updatedApps = applications.map(app =>\n        app.id === appId\n          ? { ...app, roles: [...app.roles, roleName] }\n          : app\n      );\n      setApplications(updatedApps);\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to add role');\n    }\n  };\n\n  if (loading) return <div className=\"loading\">Loading...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"user-management-container\">\n      <div className=\"user-management-header\">\n        <h3>User Management</h3>\n        <button className=\"back-button\" onClick={onLogout}>Sign Out</button>\n      </div>\n      {success && <div className=\"success-message\">{success}</div>}\n      {error && <div className=\"error-message\">{error}</div>}\n      \n      {isAppAdmin ? (\n        <div className=\"app-admin-section\">\n          <div className=\"application-selector\">\n            <h4>Select Application to Add Users</h4>\n            <select\n              value={selectedApp}\n              onChange={(e) => {\n                setSelectedApp(e.target.value);\n                setSelectedRole(''); // Reset role when app changes\n              }}\n              className=\"app-select\"\n            >\n              <option value=\"\">Choose an Application</option>\n              {applications.map(app => (\n                <option key={app.id} value={app.id}>\n                  {app.app_name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {selectedApp && (\n            <div className=\"add-user-form\">\n              <h4>Add User to {applications.find(app => app.id === selectedApp)?.app_name}</h4>\n              <input\n                type=\"text\"\n                value={newUser}\n                onChange={(e) => setNewUser(e.target.value)}\n                placeholder=\"Enter new user name\"\n              />\n              <input\n                type=\"email\"\n                value={newUserEmail}\n                onChange={(e) => setNewUserEmail(e.target.value)}\n                placeholder=\"Enter user email\"\n              />\n              <select\n                value={selectedRole}\n                onChange={(e) => setSelectedRole(e.target.value)}\n                className=\"role-select\"\n              >\n                <option value=\"\">Select Role</option>\n                {applications\n                  .find(app => app.id === selectedApp)?.roles\n                  .map(role => (\n                    <option key={role} value={role}>\n                      {role}\n                    </option>\n                  ))}\n              </select>\n              <button onClick={handleAddUser} className=\"add-user-button\">\n                Add End User\n              </button>\n            </div>\n          )}\n        </div>\n      ) : (\n        <>\n          <div className=\"add-user-form\">\n            <input\n              type=\"text\"\n              value={newUser}\n              onChange={(e) => setNewUser(e.target.value)}\n              placeholder=\"Enter new user name\"\n            />\n            <input\n              type=\"email\"\n              value={newUserEmail}\n              onChange={(e) => setNewUserEmail(e.target.value)}\n              placeholder=\"Enter user email\"\n            />\n            <button onClick={handleAddUser}>\n              Add App Admin\n            </button>\n          </div>\n\n          <div className=\"users-list\">\n            <h4>Current Users</h4>\n            <ul>\n              {users.map((user) => (\n                <li key={user.user_id}>\n                  <div className=\"user-info\">\n                    <span className=\"user-name\">{user.username}</span>\n                    <span className=\"user-email\">{user.email}</span>\n                    <span className=\"user-type\">{user.user_type}</span>\n                    <div className=\"user-assignments\">\n                      <strong>Assigned Applications:</strong>\n                      {user.assignedApps?.length > 0 ? (\n                        <div className=\"assignments-list\">\n                          {user.assignedApps.map((assignment, index) => (\n                            <div key={index} className=\"assignment-tag\">\n                              <span className=\"app-name\">{assignment.appName || 'Unknown App'}</span>\n                              <span className=\"role-name\">({assignment.role || 'No Role'})</span>\n                              <button \n                                className=\"remove-assignment\"\n                                onClick={() => handleRemoveAssignment(user.user_id, assignment.appId)}\n                                title=\"Remove Assignment\"\n                              >\n                                ×\n                              </button>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <span className=\"no-assignments\">No applications assigned</span>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"assignment-controls\">\n                    <select\n                      onChange={(e) => {\n                        const [appId, role] = e.target.value.split('|');\n                        handleAssignApp(user.user_id, appId, role);\n                        e.target.value = '';\n                      }}\n                      defaultValue=\"\"\n                    >\n                      <option value=\"\" disabled>Assign to Application</option>\n                      {applications.map(app => (\n                        (app.roles || []).map(role => (\n                          <option \n                            key={`${app.id}-${role}`} \n                            value={`${app.id}|${role}`}\n                          >\n                            {app.app_name} - {role}\n                          </option>\n                        ))\n                      ))}\n                    </select>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n\n      {isAppAdmin && (\n        <div className=\"role-management\">\n          <h4>Manage Roles</h4>\n          {applications.map(app => (\n            <div key={app.id} className=\"app-roles\">\n              <h5>{app.app_name}</h5>\n              <div className=\"add-role-form\">\n                <input\n                  type=\"text\"\n                  placeholder=\"New role name\"\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                      handleAddRole(app.id, e.target.value);\n                      e.target.value = '';\n                    }\n                  }}\n                />\n              </div>\n              <div className=\"role-list\">\n                {(app.roles || []).map((role, index) => (\n                  <span key={index} className=\"role-tag\">{role}</span>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}