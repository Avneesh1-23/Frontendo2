{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nfunction AutoFillHandler({\n  appUrl,\n  credentials\n}) {\n  _s();\n  useEffect(() => {\n    const handleAutoFill = async () => {\n      try {\n        // Inject the autofill script\n        const script = document.createElement('script');\n        script.src = chrome.runtime.getURL('autofill.js');\n        script.onload = () => {\n          // Send credentials to the injected script\n          window.postMessage({\n            type: 'AUTOFILL_CREDENTIALS',\n            credentials: credentials\n          }, '*');\n        };\n        document.body.appendChild(script);\n      } catch (error) {\n        console.error('Autofill error:', error);\n      }\n    };\n\n    // Check if we're on the target application's login page\n    const isLoginPage = window.location.href.includes(appUrl);\n    if (isLoginPage && credentials) {\n      handleAutoFill();\n    }\n  }, [appUrl, credentials]);\n  return null; // This component doesn't render anything\n}\n_s(AutoFillHandler, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AutoFillHandler;\nexport default AutoFillHandler;\nvar _c;\n$RefreshReg$(_c, \"AutoFillHandler\");","map":{"version":3,"names":["useEffect","AutoFillHandler","appUrl","credentials","_s","handleAutoFill","script","document","createElement","src","chrome","runtime","getURL","onload","window","postMessage","type","body","appendChild","error","console","isLoginPage","location","href","includes","_c","$RefreshReg$"],"sources":["/Users/jaysingh/sample2/src/components/AutoFillHandler.js"],"sourcesContent":["import { useEffect } from 'react';\n\nfunction AutoFillHandler({ appUrl, credentials }) {\n  useEffect(() => {\n    const handleAutoFill = async () => {\n      try {\n        // Inject the autofill script\n        const script = document.createElement('script');\n        script.src = chrome.runtime.getURL('autofill.js');\n        script.onload = () => {\n          // Send credentials to the injected script\n          window.postMessage({\n            type: 'AUTOFILL_CREDENTIALS',\n            credentials: credentials\n          }, '*');\n        };\n        document.body.appendChild(script);\n      } catch (error) {\n        console.error('Autofill error:', error);\n      }\n    };\n\n    // Check if we're on the target application's login page\n    const isLoginPage = window.location.href.includes(appUrl);\n    if (isLoginPage && credentials) {\n      handleAutoFill();\n    }\n  }, [appUrl, credentials]);\n\n  return null; // This component doesn't render anything\n}\n\nexport default AutoFillHandler; "],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,SAASC,eAAeA,CAAC;EAAEC,MAAM;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAChDJ,SAAS,CAAC,MAAM;IACd,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF;QACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC/CF,MAAM,CAACG,GAAG,GAAGC,MAAM,CAACC,OAAO,CAACC,MAAM,CAAC,aAAa,CAAC;QACjDN,MAAM,CAACO,MAAM,GAAG,MAAM;UACpB;UACAC,MAAM,CAACC,WAAW,CAAC;YACjBC,IAAI,EAAE,sBAAsB;YAC5Bb,WAAW,EAAEA;UACf,CAAC,EAAE,GAAG,CAAC;QACT,CAAC;QACDI,QAAQ,CAACU,IAAI,CAACC,WAAW,CAACZ,MAAM,CAAC;MACnC,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACzC;IACF,CAAC;;IAED;IACA,MAAME,WAAW,GAAGP,MAAM,CAACQ,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAACtB,MAAM,CAAC;IACzD,IAAImB,WAAW,IAAIlB,WAAW,EAAE;MAC9BE,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACH,MAAM,EAAEC,WAAW,CAAC,CAAC;EAEzB,OAAO,IAAI,CAAC,CAAC;AACf;AAACC,EAAA,CA5BQH,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AA8BxB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}