{"ast":null,"code":"var _jsxFileName = \"/Users/jaysingh/sample2/src/components/UserAccessGraph.js\",\n  _s = $RefreshSig$();\nimport { CategoryScale, Chart as ChartJS, Legend, LinearScale, LineElement, PointElement, Title, Tooltip } from 'chart.js';\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport '../styles/UserAccessGraph.css';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction UserAccessGraph() {\n  _s();\n  const [accessData, setAccessData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Using the exact data provided\n    const mockData = [{\n      user: 'John Doe',\n      lastAccess: '2023-10-01T10:00:00'\n    }, {\n      user: 'Jane Smith',\n      lastAccess: '2023-10-01T11:30:00'\n    }, {\n      user: 'Bob Johnson',\n      lastAccess: '2023-10-02T09:15:00'\n    }];\n    setAccessData(mockData);\n    setLoading(false);\n  }, []);\n  const chartData = {\n    labels: accessData.map(item => item.user),\n    datasets: [{\n      label: 'Last Access Time',\n      data: accessData.map(item => new Date(item.lastAccess).getTime()),\n      borderColor: 'var(--button-primary)',\n      backgroundColor: 'var(--button-primary-transparent)',\n      tension: 0.4,\n      pointRadius: 6,\n      pointHoverRadius: 8,\n      pointBackgroundColor: 'var(--button-primary)',\n      pointBorderColor: 'var(--card-bg)',\n      pointBorderWidth: 2\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          color: 'var(--text-color)',\n          font: {\n            size: 14\n          },\n          usePointStyle: true,\n          pointStyle: 'circle'\n        }\n      },\n      title: {\n        display: true,\n        text: 'User Last Access Times',\n        color: 'var(--text-color)',\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      },\n      tooltip: {\n        backgroundColor: 'var(--card-bg)',\n        titleColor: 'var(--text-color)',\n        bodyColor: 'var(--text-color)',\n        borderColor: 'var(--border-color)',\n        borderWidth: 1,\n        padding: 10,\n        displayColors: true,\n        callbacks: {\n          label: function (context) {\n            const date = new Date(context.raw);\n            return `Last Access: ${date.toLocaleString()}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          color: 'var(--border-color)'\n        },\n        ticks: {\n          color: 'var(--text-color)'\n        },\n        border: {\n          color: 'var(--border-color)'\n        }\n      },\n      y: {\n        grid: {\n          color: 'var(--border-color)'\n        },\n        ticks: {\n          color: 'var(--text-color)',\n          callback: function (value) {\n            return new Date(value).toLocaleTimeString();\n          }\n        },\n        border: {\n          color: 'var(--border-color)'\n        }\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading graph data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-access-graph-container\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(UserAccessGraph, \"NDNr0GHDfgO/0O68YILH5Z+FIrs=\");\n_c = UserAccessGraph;\nexport default UserAccessGraph;\nvar _c;\n$RefreshReg$(_c, \"UserAccessGraph\");","map":{"version":3,"names":["CategoryScale","Chart","ChartJS","Legend","LinearScale","LineElement","PointElement","Title","Tooltip","React","useEffect","useState","Line","jsxDEV","_jsxDEV","register","UserAccessGraph","_s","accessData","setAccessData","loading","setLoading","mockData","user","lastAccess","chartData","labels","map","item","datasets","label","data","Date","getTime","borderColor","backgroundColor","tension","pointRadius","pointHoverRadius","pointBackgroundColor","pointBorderColor","pointBorderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","color","font","size","usePointStyle","pointStyle","title","display","text","weight","tooltip","titleColor","bodyColor","borderWidth","padding","displayColors","callbacks","context","date","raw","toLocaleString","scales","x","grid","ticks","border","y","callback","value","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaysingh/sample2/src/components/UserAccessGraph.js"],"sourcesContent":["import {\n    CategoryScale,\n    Chart as ChartJS,\n    Legend,\n    LinearScale,\n    LineElement,\n    PointElement,\n    Title,\n    Tooltip,\n} from 'chart.js';\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport '../styles/UserAccessGraph.css';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction UserAccessGraph() {\n  const [accessData, setAccessData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Using the exact data provided\n    const mockData = [\n      { user: 'John Doe', lastAccess: '2023-10-01T10:00:00' },\n      { user: 'Jane Smith', lastAccess: '2023-10-01T11:30:00' },\n      { user: 'Bob Johnson', lastAccess: '2023-10-02T09:15:00' },\n    ];\n    setAccessData(mockData);\n    setLoading(false);\n  }, []);\n\n  const chartData = {\n    labels: accessData.map(item => item.user),\n    datasets: [\n      {\n        label: 'Last Access Time',\n        data: accessData.map(item => new Date(item.lastAccess).getTime()),\n        borderColor: 'var(--button-primary)',\n        backgroundColor: 'var(--button-primary-transparent)',\n        tension: 0.4,\n        pointRadius: 6,\n        pointHoverRadius: 8,\n        pointBackgroundColor: 'var(--button-primary)',\n        pointBorderColor: 'var(--card-bg)',\n        pointBorderWidth: 2,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          color: 'var(--text-color)',\n          font: {\n            size: 14,\n          },\n          usePointStyle: true,\n          pointStyle: 'circle',\n        },\n      },\n      title: {\n        display: true,\n        text: 'User Last Access Times',\n        color: 'var(--text-color)',\n        font: {\n          size: 16,\n          weight: 'bold',\n        },\n      },\n      tooltip: {\n        backgroundColor: 'var(--card-bg)',\n        titleColor: 'var(--text-color)',\n        bodyColor: 'var(--text-color)',\n        borderColor: 'var(--border-color)',\n        borderWidth: 1,\n        padding: 10,\n        displayColors: true,\n        callbacks: {\n          label: function(context) {\n            const date = new Date(context.raw);\n            return `Last Access: ${date.toLocaleString()}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          color: 'var(--border-color)',\n        },\n        ticks: {\n          color: 'var(--text-color)',\n        },\n        border: {\n          color: 'var(--border-color)'\n        }\n      },\n      y: {\n        grid: {\n          color: 'var(--border-color)',\n        },\n        ticks: {\n          color: 'var(--text-color)',\n          callback: function(value) {\n            return new Date(value).toLocaleTimeString();\n          }\n        },\n        border: {\n          color: 'var(--border-color)'\n        }\n      },\n    },\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading graph data...</div>;\n  }\n\n  return (\n    <div className=\"user-access-graph-container\">\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}\n\nexport default UserAccessGraph; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}