{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\nconst api = {\n  // Applications\n  getApplications: async () => {\n    const response = await axios.get(`${API_BASE_URL}/applications`);\n    return response.data;\n  },\n  createApplication: async application => {\n    const response = await axios.post(`${API_BASE_URL}/applications`, application);\n    return response.data;\n  },\n  updateApplication: async (id, application) => {\n    const response = await axios.put(`${API_BASE_URL}/applications/${id}`, application);\n    return response.data;\n  },\n  deleteApplication: async id => {\n    const response = await axios.delete(`${API_BASE_URL}/applications/${id}`);\n    return response.data;\n  },\n  // Users\n  getUsers: async () => {\n    const response = await axios.get(`${API_BASE_URL}/users`);\n    return response.data;\n  },\n  createUser: async user => {\n    const response = await axios.post(`${API_BASE_URL}/users`, user);\n    return response.data;\n  },\n  updateUser: async (id, user) => {\n    const response = await axios.put(`${API_BASE_URL}/users/${id}`, user);\n    return response.data;\n  },\n  deleteUser: async id => {\n    const response = await axios.delete(`${API_BASE_URL}/users/${id}`);\n    return response.data;\n  },\n  // Roles\n  getRoles: async () => {\n    const response = await axios.get(`${API_BASE_URL}/roles`);\n    return response.data;\n  },\n  createRole: async role => {\n    const response = await axios.post(`${API_BASE_URL}/roles`, role);\n    return response.data;\n  },\n  updateRole: async (id, role) => {\n    const response = await axios.put(`${API_BASE_URL}/roles/${id}`, role);\n    return response.data;\n  },\n  deleteRole: async id => {\n    const response = await axios.delete(`${API_BASE_URL}/roles/${id}`);\n    return response.data;\n  },\n  // User Applications\n  getUserApplications: async userId => {\n    const response = await axios.get(`${API_BASE_URL}/users/${userId}/applications`);\n    return response.data;\n  },\n  assignUserToApplication: async (userId, applicationId, roleId) => {\n    const response = await axios.post(`${API_BASE_URL}/users/${userId}/applications`, {\n      application_id: applicationId,\n      role_id: roleId\n    });\n    return response.data;\n  },\n  removeUserFromApplication: async (userId, applicationId) => {\n    const response = await axios.delete(`${API_BASE_URL}/users/${userId}/applications/${applicationId}`);\n    return response.data;\n  },\n  // Authentication\n  login: async credentials => {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    return response.data;\n  },\n  logout: async () => {\n    const response = await axios.post(`${API_BASE_URL}/auth/logout`);\n    return response.data;\n  },\n  // Audit Logs\n  getAuditLogs: async (filters = {}) => {\n    const response = await axios.get(`${API_BASE_URL}/audit-logs`, {\n      params: filters\n    });\n    return response.data;\n  },\n  // App Admin specific endpoints\n  getAppAdminApplications: async userId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/applications/app-admin/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch applications');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching app admin applications:', error);\n      throw error;\n    }\n  },\n  assignAppAdmin: async (userId, appId) => {\n    const response = await axios.post(`${API_BASE_URL}/app-admin/assignments`, {\n      user_id: userId,\n      app_id: appId\n    });\n    return response.data;\n  },\n  removeAppAdmin: async (userId, appId) => {\n    const response = await axios.delete(`${API_BASE_URL}/app-admin/assignments/${userId}/${appId}`);\n    return response.data;\n  },\n  getAppAdminUsers: async appId => {\n    const response = await axios.get(`${API_BASE_URL}/app-admin/applications/${appId}/users`);\n    return response.data;\n  }\n};\n\n// Add request interceptor for authentication\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  } else {\n    console.warn('No token found in localStorage');\n  }\n  return config;\n}, error => {\n  console.error('Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\naxios.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n  if (error.response) {\n    console.error('Error Response:', {\n      status: error.response.status,\n      data: error.response.data,\n      headers: error.response.headers\n    });\n    if (error.response.status === 401) {\n      console.log('Unauthorized access, redirecting to login...');\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n  } else if (error.request) {\n    console.error('No response received:', error.request);\n  } else {\n    console.error('Error setting up request:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport { api };","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","getApplications","response","get","data","createApplication","application","post","updateApplication","id","put","deleteApplication","delete","getUsers","createUser","user","updateUser","deleteUser","getRoles","createRole","role","updateRole","deleteRole","getUserApplications","userId","assignUserToApplication","applicationId","roleId","application_id","role_id","removeUserFromApplication","login","credentials","logout","getAuditLogs","filters","params","getAppAdminApplications","fetch","headers","localStorage","getItem","ok","Error","json","error","console","assignAppAdmin","appId","user_id","app_id","removeAppAdmin","getAppAdminUsers","interceptors","request","use","config","token","Authorization","warn","Promise","reject","status","log","removeItem","window","location","href","message"],"sources":["/Users/jaysingh/sample2copy/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\n\nconst api = {\n  // Applications\n  getApplications: async () => {\n    const response = await axios.get(`${API_BASE_URL}/applications`);\n    return response.data;\n  },\n\n  createApplication: async (application) => {\n    const response = await axios.post(`${API_BASE_URL}/applications`, application);\n    return response.data;\n  },\n\n  updateApplication: async (id, application) => {\n    const response = await axios.put(`${API_BASE_URL}/applications/${id}`, application);\n    return response.data;\n  },\n\n  deleteApplication: async (id) => {\n    const response = await axios.delete(`${API_BASE_URL}/applications/${id}`);\n    return response.data;\n  },\n\n  // Users\n  getUsers: async () => {\n    const response = await axios.get(`${API_BASE_URL}/users`);\n    return response.data;\n  },\n\n  createUser: async (user) => {\n    const response = await axios.post(`${API_BASE_URL}/users`, user);\n    return response.data;\n  },\n\n  updateUser: async (id, user) => {\n    const response = await axios.put(`${API_BASE_URL}/users/${id}`, user);\n    return response.data;\n  },\n\n  deleteUser: async (id) => {\n    const response = await axios.delete(`${API_BASE_URL}/users/${id}`);\n    return response.data;\n  },\n\n  // Roles\n  getRoles: async () => {\n    const response = await axios.get(`${API_BASE_URL}/roles`);\n    return response.data;\n  },\n\n  createRole: async (role) => {\n    const response = await axios.post(`${API_BASE_URL}/roles`, role);\n    return response.data;\n  },\n\n  updateRole: async (id, role) => {\n    const response = await axios.put(`${API_BASE_URL}/roles/${id}`, role);\n    return response.data;\n  },\n\n  deleteRole: async (id) => {\n    const response = await axios.delete(`${API_BASE_URL}/roles/${id}`);\n    return response.data;\n  },\n\n  // User Applications\n  getUserApplications: async (userId) => {\n    const response = await axios.get(`${API_BASE_URL}/users/${userId}/applications`);\n    return response.data;\n  },\n\n  assignUserToApplication: async (userId, applicationId, roleId) => {\n    const response = await axios.post(`${API_BASE_URL}/users/${userId}/applications`, {\n      application_id: applicationId,\n      role_id: roleId\n    });\n    return response.data;\n  },\n\n  removeUserFromApplication: async (userId, applicationId) => {\n    const response = await axios.delete(`${API_BASE_URL}/users/${userId}/applications/${applicationId}`);\n    return response.data;\n  },\n\n  // Authentication\n  login: async (credentials) => {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    return response.data;\n  },\n\n  logout: async () => {\n    const response = await axios.post(`${API_BASE_URL}/auth/logout`);\n    return response.data;\n  },\n\n  // Audit Logs\n  getAuditLogs: async (filters = {}) => {\n    const response = await axios.get(`${API_BASE_URL}/audit-logs`, { params: filters });\n    return response.data;\n  },\n\n  // App Admin specific endpoints\n  getAppAdminApplications: async (userId) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/applications/app-admin/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch applications');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching app admin applications:', error);\n      throw error;\n    }\n  },\n\n  assignAppAdmin: async (userId, appId) => {\n    const response = await axios.post(`${API_BASE_URL}/app-admin/assignments`, {\n      user_id: userId,\n      app_id: appId\n    });\n    return response.data;\n  },\n\n  removeAppAdmin: async (userId, appId) => {\n    const response = await axios.delete(`${API_BASE_URL}/app-admin/assignments/${userId}/${appId}`);\n    return response.data;\n  },\n\n  getAppAdminUsers: async (appId) => {\n    const response = await axios.get(`${API_BASE_URL}/app-admin/applications/${appId}/users`);\n    return response.data;\n  },\n};\n\n// Add request interceptor for authentication\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    } else {\n      console.warn('No token found in localStorage');\n    }\n    return config;\n  },\n  (error) => {\n    console.error('Request interceptor error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error);\n    if (error.response) {\n      console.error('Error Response:', {\n        status: error.response.status,\n        data: error.response.data,\n        headers: error.response.headers\n      });\n      \n      if (error.response.status === 401) {\n        console.log('Unauthorized access, redirecting to login...');\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n    } else {\n      console.error('Error setting up request:', error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport { api };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}