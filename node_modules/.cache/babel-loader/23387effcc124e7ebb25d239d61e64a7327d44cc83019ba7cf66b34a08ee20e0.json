{"ast":null,"code":"var _jsxFileName = \"/Users/jaysingh/sample2copy/src/components/UserManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/UserManagement.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserManagement({\n  isAppAdmin,\n  onLogout\n}) {\n  _s();\n  var _applications$find;\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [selectedApp, setSelectedApp] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch users data\n      const usersData = await api.getUsers();\n\n      // Fetch applications data based on user type\n      let appsData = [];\n      if (isAppAdmin) {\n        try {\n          appsData = await api.getAppAdminApplications();\n        } catch (appError) {\n          console.error('Error fetching app admin applications:', appError);\n        }\n      } else {\n        appsData = await api.getApplications();\n      }\n\n      // Process and combine the data\n      const processedUsers = usersData.map(user => ({\n        ...user,\n        assignedApps: user.assignedApps || []\n      }));\n      setUsers(processedUsers);\n      setApplications(appsData);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error in fetchData:', err);\n      setError('Failed to fetch data. Please try again later.');\n      setLoading(false);\n    }\n  };\n  const handleAddUser = async () => {\n    if (newUser.trim() && newUserEmail.trim()) {\n      try {\n        // First create the user\n        const response = await api.createUser({\n          username: newUser,\n          email: newUserEmail,\n          password_hash: 'defaultPassword123',\n          user_type: 'end'\n        });\n\n        // If app admin and application is selected, assign the user to the application\n        if (isAppAdmin && selectedApp && selectedRole) {\n          await api.assignUserToApplication(response.user_id, selectedApp, selectedRole);\n        }\n\n        // Add the new user to the users list immediately\n        const newUserObj = {\n          user_id: response.user_id,\n          username: newUser,\n          email: newUserEmail,\n          user_type: 'end',\n          assignedApps: []\n        };\n        if (isAppAdmin && selectedApp && selectedRole) {\n          const selectedAppData = applications.find(app => app.id === selectedApp);\n          newUserObj.assignedApps.push({\n            appId: selectedApp,\n            appName: (selectedAppData === null || selectedAppData === void 0 ? void 0 : selectedAppData.app_name) || 'Unknown App',\n            role: selectedRole\n          });\n        }\n        setUsers(prevUsers => [...prevUsers, newUserObj]);\n\n        // Clear the form\n        setNewUser('');\n        setNewUserEmail('');\n        setSelectedApp('');\n        setSelectedRole('');\n        setSuccess('User added successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error creating user:', err);\n        setError('Failed to add user: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      }\n    } else {\n      setError('Please provide both username and email');\n    }\n  };\n  const handleAssignApp = async (userId, appId, role) => {\n    try {\n      await api.assignUserToApplication(userId, appId, role);\n      const updatedUsers = users.map(user => user.id === userId ? {\n        ...user,\n        assignedApps: [...user.assignedApps, {\n          appId,\n          role\n        }]\n      } : user);\n      setUsers(updatedUsers);\n      setSuccess('User assigned successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to assign user');\n    }\n  };\n  const handleRemoveAssignment = async (userId, appId) => {\n    try {\n      await api.removeUserFromApplication(userId, appId);\n      const updatedUsers = users.map(user => user.id === userId ? {\n        ...user,\n        assignedApps: user.assignedApps.filter(app => app.appId !== appId)\n      } : user);\n      setUsers(updatedUsers);\n      setSuccess('Assignment removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to remove assignment');\n    }\n  };\n  const handleAddRole = async (appId, roleName) => {\n    try {\n      await api.createRole({\n        app_id: appId,\n        role_name: roleName\n      });\n      const updatedApps = applications.map(app => app.id === appId ? {\n        ...app,\n        roles: [...app.roles, roleName]\n      } : app);\n      setApplications(updatedApps);\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to add role');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-management-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-user-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newUser,\n        onChange: e => setNewUser(e.target.value),\n        placeholder: \"Enter new user name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: newUserEmail,\n        onChange: e => setNewUserEmail(e.target.value),\n        placeholder: \"Enter user email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), isAppAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedApp,\n          onChange: e => setSelectedApp(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: app.id,\n            children: app.app_name\n          }, app.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRole,\n          onChange: e => setSelectedRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), selectedApp && ((_applications$find = applications.find(app => app.id === selectedApp)) === null || _applications$find === void 0 ? void 0 : _applications$find.roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: role,\n            children: role\n          }, role, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this)))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddUser,\n        children: [\"Add \", isAppAdmin ? 'End User' : 'App Admin']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), isAppAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-users-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recently Added End Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: users.filter(user => user.user_type === 'end').map(user => {\n            var _user$assignedApps, _applications$find2;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-name\",\n                  children: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-email\",\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-assignments\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Assigned Applications:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 23\n                  }, this), ((_user$assignedApps = user.assignedApps) === null || _user$assignedApps === void 0 ? void 0 : _user$assignedApps.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"assignments-list\",\n                    children: user.assignedApps.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"assignment-tag\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"app-name\",\n                        children: assignment.appName || 'Unknown App'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"role-name\",\n                        children: [\"(\", assignment.role || 'No Role', \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"remove-assignment\",\n                        onClick: () => handleRemoveAssignment(user.user_id, assignment.appId),\n                        title: \"Remove Assignment\",\n                        children: \"\\xD7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"no-assignments\",\n                    children: \"No applications assigned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"assignment-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                    value: user.selectedApp || '',\n                    onChange: e => {\n                      const updatedUsers = users.map(u => u.user_id === user.user_id ? {\n                        ...u,\n                        selectedApp: e.target.value,\n                        selectedRole: ''\n                      } : u);\n                      setUsers(updatedUsers);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Application\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 25\n                    }, this), applications.filter(app => {\n                      var _user$assignedApps2;\n                      return !((_user$assignedApps2 = user.assignedApps) !== null && _user$assignedApps2 !== void 0 && _user$assignedApps2.some(a => a.appId === app.id));\n                    }).map(app => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: app.id,\n                      children: app.app_name\n                    }, app.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 29\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 23\n                  }, this), user.selectedApp && /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: user.selectedRole || '',\n                    onChange: e => {\n                      const updatedUsers = users.map(u => u.user_id === user.user_id ? {\n                        ...u,\n                        selectedRole: e.target.value\n                      } : u);\n                      setUsers(updatedUsers);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Role\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 27\n                    }, this), (_applications$find2 = applications.find(app => app.id === user.selectedApp)) === null || _applications$find2 === void 0 ? void 0 : _applications$find2.roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: role,\n                      children: role\n                    }, role, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 31\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this), user.selectedApp && user.selectedRole && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleAssignApp(user.user_id, user.selectedApp, user.selectedRole),\n                    className: \"assign-button\",\n                    children: \"Assign\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, user.user_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"role-management\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Manage Roles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-roles\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: app.app_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-role-form\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"New role name\",\n              onKeyPress: e => {\n                if (e.key === 'Enter') {\n                  handleAddRole(app.id, e.target.value);\n                  e.target.value = '';\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"role-list\",\n            children: (app.roles || []).map((role, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"role-tag\",\n              children: role\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this)]\n        }, app.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(UserManagement, \"T2HSZE1beL4A8T8CjVTMZxkXmtA=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManagement","isAppAdmin","onLogout","_s","_applications$find","users","setUsers","newUser","setNewUser","newUserEmail","setNewUserEmail","selectedApp","setSelectedApp","selectedRole","setSelectedRole","applications","setApplications","loading","setLoading","error","setError","success","setSuccess","fetchData","usersData","getUsers","appsData","getAppAdminApplications","appError","console","getApplications","processedUsers","map","user","assignedApps","err","handleAddUser","trim","response","createUser","username","email","password_hash","user_type","assignUserToApplication","user_id","newUserObj","selectedAppData","find","app","id","push","appId","appName","app_name","role","prevUsers","setTimeout","_err$response","_err$response$data","data","message","handleAssignApp","userId","updatedUsers","handleRemoveAssignment","removeUserFromApplication","filter","handleAddRole","roleName","createRole","app_id","role_name","updatedApps","roles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_user$assignedApps","_applications$find2","length","assignment","index","title","u","_user$assignedApps2","some","a","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/jaysingh/sample2copy/src/components/UserManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/UserManagement.css';\n\nfunction UserManagement({ isAppAdmin, onLogout }) {\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [selectedApp, setSelectedApp] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Fetch users data\n      const usersData = await api.getUsers();\n      \n      // Fetch applications data based on user type\n      let appsData = [];\n      if (isAppAdmin) {\n        try {\n          appsData = await api.getAppAdminApplications();\n        } catch (appError) {\n          console.error('Error fetching app admin applications:', appError);\n        }\n      } else {\n        appsData = await api.getApplications();\n      }\n\n      // Process and combine the data\n      const processedUsers = usersData.map(user => ({\n        ...user,\n        assignedApps: user.assignedApps || []\n      }));\n\n      setUsers(processedUsers);\n      setApplications(appsData);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error in fetchData:', err);\n      setError('Failed to fetch data. Please try again later.');\n      setLoading(false);\n    }\n  };\n\n  const handleAddUser = async () => {\n    if (newUser.trim() && newUserEmail.trim()) {\n      try {\n        // First create the user\n        const response = await api.createUser({\n          username: newUser,\n          email: newUserEmail,\n          password_hash: 'defaultPassword123',\n          user_type: 'end'\n        });\n\n        // If app admin and application is selected, assign the user to the application\n        if (isAppAdmin && selectedApp && selectedRole) {\n          await api.assignUserToApplication(response.user_id, selectedApp, selectedRole);\n        }\n\n        // Add the new user to the users list immediately\n        const newUserObj = {\n          user_id: response.user_id,\n          username: newUser,\n          email: newUserEmail,\n          user_type: 'end',\n          assignedApps: []\n        };\n\n        if (isAppAdmin && selectedApp && selectedRole) {\n          const selectedAppData = applications.find(app => app.id === selectedApp);\n          newUserObj.assignedApps.push({\n            appId: selectedApp,\n            appName: selectedAppData?.app_name || 'Unknown App',\n            role: selectedRole\n          });\n        }\n\n        setUsers(prevUsers => [...prevUsers, newUserObj]);\n        \n        // Clear the form\n        setNewUser('');\n        setNewUserEmail('');\n        setSelectedApp('');\n        setSelectedRole('');\n        \n        setSuccess('User added successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        console.error('Error creating user:', err);\n        setError('Failed to add user: ' + (err.response?.data?.message || err.message));\n      }\n    } else {\n      setError('Please provide both username and email');\n    }\n  };\n\n  const handleAssignApp = async (userId, appId, role) => {\n    try {\n      await api.assignUserToApplication(userId, appId, role);\n      const updatedUsers = users.map(user => \n        user.id === userId \n          ? { \n              ...user, \n              assignedApps: [...user.assignedApps, { appId, role }] \n            } \n          : user\n      );\n      setUsers(updatedUsers);\n      setSuccess('User assigned successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to assign user');\n    }\n  };\n\n  const handleRemoveAssignment = async (userId, appId) => {\n    try {\n      await api.removeUserFromApplication(userId, appId);\n      const updatedUsers = users.map(user =>\n        user.id === userId\n          ? {\n              ...user,\n              assignedApps: user.assignedApps.filter(app => app.appId !== appId)\n            }\n          : user\n      );\n      setUsers(updatedUsers);\n      setSuccess('Assignment removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to remove assignment');\n    }\n  };\n\n  const handleAddRole = async (appId, roleName) => {\n    try {\n      await api.createRole({\n        app_id: appId,\n        role_name: roleName\n      });\n      const updatedApps = applications.map(app =>\n        app.id === appId\n          ? { ...app, roles: [...app.roles, roleName] }\n          : app\n      );\n      setApplications(updatedApps);\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to add role');\n    }\n  };\n\n  if (loading) return <div className=\"loading\">Loading...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"user-management-container\">\n      <div className=\"user-management-header\">\n        <h3>User Management</h3>\n      </div>\n      {success && <div className=\"success-message\">{success}</div>}\n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"add-user-form\">\n        <input\n          type=\"text\"\n          value={newUser}\n          onChange={(e) => setNewUser(e.target.value)}\n          placeholder=\"Enter new user name\"\n        />\n        <input\n          type=\"email\"\n          value={newUserEmail}\n          onChange={(e) => setNewUserEmail(e.target.value)}\n          placeholder=\"Enter user email\"\n        />\n        {isAppAdmin && (\n          <>\n            <select\n              value={selectedApp}\n              onChange={(e) => setSelectedApp(e.target.value)}\n            >\n              <option value=\"\">Select Application</option>\n              {applications.map(app => (\n                <option key={app.id} value={app.id}>\n                  {app.app_name}\n                </option>\n              ))}\n            </select>\n            <select\n              value={selectedRole}\n              onChange={(e) => setSelectedRole(e.target.value)}\n            >\n              <option value=\"\">Select Role</option>\n              {selectedApp && applications\n                .find(app => app.id === selectedApp)?.roles\n                .map(role => (\n                  <option key={role} value={role}>\n                    {role}\n                  </option>\n                ))}\n            </select>\n          </>\n        )}\n        <button onClick={handleAddUser}>\n          Add {isAppAdmin ? 'End User' : 'App Admin'}\n        </button>\n      </div>\n\n      {isAppAdmin && (\n        <>\n          <div className=\"new-users-list\">\n            <h4>Recently Added End Users</h4>\n            <ul>\n              {users\n                .filter(user => user.user_type === 'end')\n                .map((user) => (\n                <li key={user.user_id}>\n                  <div className=\"user-info\">\n                    <span className=\"user-name\">{user.username}</span>\n                    <span className=\"user-email\">{user.email}</span>\n                    <div className=\"user-assignments\">\n                      <strong>Assigned Applications:</strong>\n                      {user.assignedApps?.length > 0 ? (\n                        <div className=\"assignments-list\">\n                          {user.assignedApps.map((assignment, index) => (\n                            <div key={index} className=\"assignment-tag\">\n                              <span className=\"app-name\">{assignment.appName || 'Unknown App'}</span>\n                              <span className=\"role-name\">({assignment.role || 'No Role'})</span>\n                              <button \n                                className=\"remove-assignment\"\n                                onClick={() => handleRemoveAssignment(user.user_id, assignment.appId)}\n                                title=\"Remove Assignment\"\n                              >\n                                ×\n                              </button>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <span className=\"no-assignments\">No applications assigned</span>\n                      )}\n                    </div>\n                    <div className=\"assignment-form\">\n                      <select\n                        value={user.selectedApp || ''}\n                        onChange={(e) => {\n                          const updatedUsers = users.map(u => \n                            u.user_id === user.user_id \n                              ? { ...u, selectedApp: e.target.value, selectedRole: '' }\n                              : u\n                          );\n                          setUsers(updatedUsers);\n                        }}\n                      >\n                        <option value=\"\">Select Application</option>\n                        {applications\n                          .filter(app => !user.assignedApps?.some(a => a.appId === app.id))\n                          .map(app => (\n                            <option key={app.id} value={app.id}>\n                              {app.app_name}\n                            </option>\n                          ))}\n                      </select>\n                      {user.selectedApp && (\n                        <select\n                          value={user.selectedRole || ''}\n                          onChange={(e) => {\n                            const updatedUsers = users.map(u => \n                              u.user_id === user.user_id \n                                ? { ...u, selectedRole: e.target.value }\n                                : u\n                            );\n                            setUsers(updatedUsers);\n                          }}\n                        >\n                          <option value=\"\">Select Role</option>\n                          {applications\n                            .find(app => app.id === user.selectedApp)?.roles\n                            .map(role => (\n                              <option key={role} value={role}>\n                                {role}\n                              </option>\n                            ))}\n                        </select>\n                      )}\n                      {user.selectedApp && user.selectedRole && (\n                        <button\n                          onClick={() => handleAssignApp(user.user_id, user.selectedApp, user.selectedRole)}\n                          className=\"assign-button\"\n                        >\n                          Assign\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"role-management\">\n            <h4>Manage Roles</h4>\n            {applications.map(app => (\n              <div key={app.id} className=\"app-roles\">\n                <h5>{app.app_name}</h5>\n                <div className=\"add-role-form\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"New role name\"\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') {\n                        handleAddRole(app.id, e.target.value);\n                        e.target.value = '';\n                      }\n                    }}\n                  />\n                </div>\n                <div className=\"role-list\">\n                  {(app.roles || []).map((role, index) => (\n                    <span key={index} className=\"role-tag\">{role}</span>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default UserManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}