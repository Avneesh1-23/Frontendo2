{"ast":null,"code":"var _jsxFileName = \"/Users/jaysingh/sample2copy/src/components/ApplicationList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/ApplicationList.css';\nimport AppManagementModal from './AppManagementModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApplicationList({\n  userType\n}) {\n  _s();\n  const [applications, setApplications] = useState([]);\n  const [newApp, setNewApp] = useState({\n    name: '',\n    url: '',\n    roles: ''\n  });\n  const [newRole, setNewRole] = useState({\n    appId: '',\n    roleName: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedApp, setSelectedApp] = useState(null);\n  const [showAccessRequestModal, setShowAccessRequestModal] = useState(false);\n  const [selectedRestrictedApp, setSelectedRestrictedApp] = useState(null);\n  const [accessRequestReason, setAccessRequestReason] = useState('');\n  const [restrictedApps, setRestrictedApps] = useState([]);\n  useEffect(() => {\n    fetchApplications();\n  }, []);\n  const fetchApplications = async () => {\n    try {\n      console.log('Fetching applications...');\n      const data = await api.getApplications();\n      console.log('Received applications:', data);\n      setApplications(data);\n\n      // Filter restricted applications for end users\n      if (userType === 'end') {\n        const restricted = data.filter(app => {\n          const appName = app.app_name.toLowerCase();\n          return appName.includes('hr') || appName.includes('devops') || appName.includes('finance');\n        });\n        setRestrictedApps(restricted);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching applications:', err);\n      setError(`Failed to fetch applications: ${err.message}`);\n      setLoading(false);\n    }\n  };\n  const handleAddApplication = async () => {\n    if (newApp.name && newApp.url) {\n      try {\n        const application = {\n          app_name: newApp.name,\n          app_url: newApp.url,\n          description: newApp.roles,\n          created_by: 2 // This should come from the logged-in user\n        };\n        const result = await api.createApplication(application);\n        setApplications([...applications, result]);\n        setNewApp({\n          name: '',\n          url: '',\n          roles: ''\n        });\n        setSuccess('Application added successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        console.error('Error adding application:', err);\n        setError(`Failed to add application: ${err.message}`);\n      }\n    } else {\n      setError('Please fill in all required fields');\n    }\n  };\n  const handleAddRole = async (appId, roleName) => {\n    if (!appId || !roleName) {\n      setError('Please select an application and enter a role name');\n      return;\n    }\n    try {\n      // This would be an API call to add a role\n      const updatedApplications = applications.map(app => app.app_id === parseInt(appId) ? {\n        ...app,\n        roles: [...(app.roles || []), roleName]\n      } : app);\n      setApplications(updatedApplications);\n      setNewRole({\n        appId: '',\n        roleName: ''\n      });\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error adding role:', err);\n      setError(`Failed to add role: ${err.message}`);\n    }\n  };\n  const handleRemoveRole = async (appId, roleToRemove) => {\n    try {\n      // This would be an API call to remove a role\n      const updatedApplications = applications.map(app => app.app_id === appId ? {\n        ...app,\n        roles: (app.roles || []).filter(role => role !== roleToRemove)\n      } : app);\n      setApplications(updatedApplications);\n      setSuccess('Role removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error removing role:', err);\n      setError(`Failed to remove role: ${err.message}`);\n    }\n  };\n  const handleAccessApp = async app => {\n    try {\n      // Check if user is end user and trying to access restricted apps\n      if (userType === 'end') {\n        const isRestricted = restrictedApps.some(restricted => restricted.app_id === app.app_id);\n        if (isRestricted) {\n          setSelectedRestrictedApp(app);\n          setShowAccessRequestModal(true);\n          return;\n        }\n      }\n\n      // Check if this is the Github App (by name or URL)\n      if (app.app_name.toLowerCase().includes('github') || app.app_url.includes('github.com')) {\n        try {\n          await api.triggerGithubAutoLogin();\n        } catch (err) {\n          console.error(\"Auto-login failed\", err);\n        }\n      }\n\n      // Open the app URL\n      const formattedUrl = app.app_url.startsWith('http') ? app.app_url : `https://${app.app_url}`;\n      window.open(formattedUrl, '_blank', 'noopener,noreferrer');\n    } catch (err) {\n      setError(`Failed to access application: ${err.message}`);\n    }\n  };\n  const handleRequestAccess = async () => {\n    if (!selectedRestrictedApp || !accessRequestReason.trim()) {\n      setError('Please select an application and provide a reason for access request');\n      return;\n    }\n    try {\n      // Here you would typically make an API call to send the access request\n      const requestData = {\n        app_id: selectedRestrictedApp.app_id,\n        app_name: selectedRestrictedApp.app_name,\n        reason: accessRequestReason\n      };\n\n      // TODO: Add API call to send access request\n      // await api.requestAccess(requestData);\n\n      setSuccess('Access request sent successfully. You will be notified once approved.');\n      setShowAccessRequestModal(false);\n      setSelectedRestrictedApp(null);\n      setAccessRequestReason('');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to send access request. Please try again.');\n    }\n  };\n  const handleManageApp = app => {\n    setSelectedApp(app);\n  };\n  const handleCloseModal = () => {\n    setSelectedApp(null);\n  };\n  const handleAppUpdate = async (type, data) => {\n    try {\n      if (type === 'settings' && data.save) {\n        // Update application settings\n        const updatedApp = {\n          app_name: data.name || selectedApp.app_name,\n          app_url: data.url || selectedApp.app_url,\n          description: data.description || selectedApp.description\n        };\n        await api.updateApplication(selectedApp.app_id, updatedApp);\n\n        // Update the applications list with the new data\n        const updatedApps = applications.map(app => app.app_id === selectedApp.app_id ? {\n          ...app,\n          ...updatedApp\n        } : app);\n        setApplications(updatedApps);\n        setSuccess('Application settings updated successfully');\n        handleCloseModal();\n      } else if (type === 'role') {\n        if (data.action === 'add') {\n          const updatedApps = applications.map(app => app.app_id === selectedApp.app_id ? {\n            ...app,\n            roles: [...(app.roles || []), data.role]\n          } : app);\n          setApplications(updatedApps);\n          setSuccess('Role added successfully');\n        } else if (data.action === 'remove') {\n          const updatedApps = applications.map(app => app.app_id === selectedApp.app_id ? {\n            ...app,\n            roles: app.roles.filter(role => role !== data.role)\n          } : app);\n          setApplications(updatedApps);\n          setSuccess('Role removed successfully');\n        }\n      } else if (type === 'user') {\n        setSuccess('User assigned successfully');\n      }\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error updating application:', err);\n      setError(`Failed to update application: ${err.message}`);\n    }\n  };\n  const handleDeleteApplication = async appId => {\n    if (window.confirm('Are you sure you want to delete this application? This action cannot be undone.')) {\n      try {\n        await api.deleteApplication(appId);\n        setApplications(applications.filter(app => app.app_id !== appId));\n        setSuccess('Application deleted successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        console.error('Error deleting application:', err);\n        setError(`Failed to delete application: ${err.message}`);\n      }\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading applications...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"application-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }, this), userType === 'admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-application-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add New Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newApp.name,\n          onChange: e => setNewApp({\n            ...newApp,\n            name: e.target.value\n          }),\n          placeholder: \"Application Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newApp.url,\n          onChange: e => setNewApp({\n            ...newApp,\n            url: e.target.value\n          }),\n          placeholder: \"Application URL (e.g., app.example.com)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddApplication,\n          children: \"Add Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), userType === 'app_admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-admin-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-role-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add New Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newRole.appId,\n          onChange: e => setNewRole({\n            ...newRole,\n            appId: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: app.app_id,\n            children: app.app_name\n          }, app.app_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newRole.roleName,\n          onChange: e => setNewRole({\n            ...newRole,\n            roleName: e.target.value\n          }),\n          placeholder: \"Role Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddRole(newRole.appId, newRole.roleName),\n          children: \"Add Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), userType === 'app_admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-admin-user-management-note\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"As an App Admin, you can assign users to your applications and manage their roles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"applications-list\",\n      children: applications.map(app => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"application-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"app-name\",\n            children: app.app_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), userType === 'app_admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app-roles\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Roles:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this), (app.roles || []).map((role, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"role-tag\",\n              children: [role, /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-role\",\n                onClick: () => handleRemoveRole(app.app_id, role),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"access-button\",\n            onClick: () => handleAccessApp(app),\n            children: \"Access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), (userType === 'admin' || userType === 'app_admin') && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"manage-button\",\n            onClick: () => handleManageApp(app),\n            children: \"Manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), userType === 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDeleteApplication(app.app_id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, app.app_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), selectedApp && /*#__PURE__*/_jsxDEV(AppManagementModal, {\n      app: selectedApp,\n      userType: userType,\n      onClose: handleCloseModal,\n      onUpdate: handleAppUpdate,\n      isAdminOnly: userType === 'admin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this), showAccessRequestModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content access-request-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Request Access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: () => setShowAccessRequestModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"access-denied-message\",\n            children: \"Access to restricted applications requires approval.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"request-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"app-select\",\n                children: \"Select Application:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"app-select\",\n                value: (selectedRestrictedApp === null || selectedRestrictedApp === void 0 ? void 0 : selectedRestrictedApp.app_id) || '',\n                onChange: e => {\n                  const app = restrictedApps.find(a => a.app_id === parseInt(e.target.value));\n                  setSelectedRestrictedApp(app);\n                },\n                className: \"app-select\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select an application\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 21\n                }, this), restrictedApps.map(app => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: app.app_id,\n                  children: app.app_name\n                }, app.app_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"access-reason\",\n                children: \"Reason for Access Request:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"access-reason\",\n                value: accessRequestReason,\n                onChange: e => setAccessRequestReason(e.target.value),\n                placeholder: \"Please explain why you need access to this application...\",\n                rows: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"request-button\",\n            onClick: handleRequestAccess,\n            children: \"Submit Request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: () => setShowAccessRequestModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n}\n_s(ApplicationList, \"f4SIadftnwjhl5YPwwFHPbwCaQM=\");\n_c = ApplicationList;\nexport default ApplicationList;\nvar _c;\n$RefreshReg$(_c, \"ApplicationList\");","map":{"version":3,"names":["React","useEffect","useState","api","AppManagementModal","jsxDEV","_jsxDEV","ApplicationList","userType","_s","applications","setApplications","newApp","setNewApp","name","url","roles","newRole","setNewRole","appId","roleName","loading","setLoading","error","setError","success","setSuccess","selectedApp","setSelectedApp","showAccessRequestModal","setShowAccessRequestModal","selectedRestrictedApp","setSelectedRestrictedApp","accessRequestReason","setAccessRequestReason","restrictedApps","setRestrictedApps","fetchApplications","console","log","data","getApplications","restricted","filter","app","appName","app_name","toLowerCase","includes","err","message","handleAddApplication","application","app_url","description","created_by","result","createApplication","setTimeout","handleAddRole","updatedApplications","map","app_id","parseInt","handleRemoveRole","roleToRemove","role","handleAccessApp","isRestricted","some","triggerGithubAutoLogin","formattedUrl","startsWith","window","open","handleRequestAccess","trim","requestData","reason","handleManageApp","handleCloseModal","handleAppUpdate","type","save","updatedApp","updateApplication","updatedApps","action","handleDeleteApplication","confirm","deleteApplication","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","index","onClose","onUpdate","isAdminOnly","htmlFor","id","find","a","rows","_c","$RefreshReg$"],"sources":["/Users/jaysingh/sample2copy/src/components/ApplicationList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/ApplicationList.css';\nimport AppManagementModal from './AppManagementModal';\n\nfunction ApplicationList({ userType }) {\n  const [applications, setApplications] = useState([]);\n  const [newApp, setNewApp] = useState({ name: '', url: '', roles: '' });\n  const [newRole, setNewRole] = useState({ appId: '', roleName: '' });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedApp, setSelectedApp] = useState(null);\n  const [showAccessRequestModal, setShowAccessRequestModal] = useState(false);\n  const [selectedRestrictedApp, setSelectedRestrictedApp] = useState(null);\n  const [accessRequestReason, setAccessRequestReason] = useState('');\n  const [restrictedApps, setRestrictedApps] = useState([]);\n\n  useEffect(() => {\n    fetchApplications();\n  }, []);\n\n  const fetchApplications = async () => {\n    try {\n      console.log('Fetching applications...');\n      const data = await api.getApplications();\n      console.log('Received applications:', data);\n      setApplications(data);\n      \n      // Filter restricted applications for end users\n      if (userType === 'end') {\n        const restricted = data.filter(app => {\n          const appName = app.app_name.toLowerCase();\n          return appName.includes('hr') || \n                 appName.includes('devops') || \n                 appName.includes('finance');\n        });\n        setRestrictedApps(restricted);\n      }\n      \n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching applications:', err);\n      setError(`Failed to fetch applications: ${err.message}`);\n      setLoading(false);\n    }\n  };\n\n  const handleAddApplication = async () => {\n    if (newApp.name && newApp.url) {\n      try {\n        const application = {\n          app_name: newApp.name,\n          app_url: newApp.url,\n          description: newApp.roles,\n          created_by: 2 // This should come from the logged-in user\n        };\n        \n        const result = await api.createApplication(application);\n        setApplications([...applications, result]);\n        setNewApp({ name: '', url: '', roles: '' });\n        setSuccess('Application added successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        console.error('Error adding application:', err);\n        setError(`Failed to add application: ${err.message}`);\n      }\n    } else {\n      setError('Please fill in all required fields');\n    }\n  };\n\n  const handleAddRole = async (appId, roleName) => {\n    if (!appId || !roleName) {\n      setError('Please select an application and enter a role name');\n      return;\n    }\n\n    try {\n      // This would be an API call to add a role\n      const updatedApplications = applications.map(app => \n        app.app_id === parseInt(appId)\n          ? { ...app, roles: [...(app.roles || []), roleName] }\n          : app\n      );\n      setApplications(updatedApplications);\n      setNewRole({ appId: '', roleName: '' });\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error adding role:', err);\n      setError(`Failed to add role: ${err.message}`);\n    }\n  };\n  \n  const handleRemoveRole = async (appId, roleToRemove) => {\n    try {\n      // This would be an API call to remove a role\n      const updatedApplications = applications.map(app =>\n        app.app_id === appId\n          ? { ...app, roles: (app.roles || []).filter(role => role !== roleToRemove) }\n          : app\n      );\n      setApplications(updatedApplications);\n      setSuccess('Role removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error removing role:', err);\n      setError(`Failed to remove role: ${err.message}`);\n    }\n  };\n\n  const handleAccessApp = async (app) => {\n    try {\n      // Check if user is end user and trying to access restricted apps\n      if (userType === 'end') {\n        const isRestricted = restrictedApps.some(restricted => \n          restricted.app_id === app.app_id\n        );\n\n        if (isRestricted) {\n          setSelectedRestrictedApp(app);\n          setShowAccessRequestModal(true);\n          return;\n        }\n      }\n\n      // Check if this is the Github App (by name or URL)\n      if (app.app_name.toLowerCase().includes('github') || app.app_url.includes('github.com')) {\n        try {\n          await api.triggerGithubAutoLogin();\n        } catch (err) {\n          console.error(\"Auto-login failed\", err);\n        }\n      }\n\n      // Open the app URL\n      const formattedUrl = app.app_url.startsWith('http') ? app.app_url : `https://${app.app_url}`;\n      window.open(formattedUrl, '_blank', 'noopener,noreferrer');\n    } catch (err) {\n      setError(`Failed to access application: ${err.message}`);\n    }\n  };\n\n  const handleRequestAccess = async () => {\n    if (!selectedRestrictedApp || !accessRequestReason.trim()) {\n      setError('Please select an application and provide a reason for access request');\n      return;\n    }\n\n    try {\n      // Here you would typically make an API call to send the access request\n      const requestData = {\n        app_id: selectedRestrictedApp.app_id,\n        app_name: selectedRestrictedApp.app_name,\n        reason: accessRequestReason\n      };\n      \n      // TODO: Add API call to send access request\n      // await api.requestAccess(requestData);\n      \n      setSuccess('Access request sent successfully. You will be notified once approved.');\n      setShowAccessRequestModal(false);\n      setSelectedRestrictedApp(null);\n      setAccessRequestReason('');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to send access request. Please try again.');\n    }\n  };\n\n  const handleManageApp = (app) => {\n    setSelectedApp(app);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedApp(null);\n  };\n\n  const handleAppUpdate = async (type, data) => {\n    try {\n      if (type === 'settings' && data.save) {\n        // Update application settings\n        const updatedApp = {\n          app_name: data.name || selectedApp.app_name,\n          app_url: data.url || selectedApp.app_url,\n          description: data.description || selectedApp.description\n        };\n\n        await api.updateApplication(selectedApp.app_id, updatedApp);\n        \n        // Update the applications list with the new data\n        const updatedApps = applications.map(app =>\n          app.app_id === selectedApp.app_id\n            ? { ...app, ...updatedApp }\n            : app\n        );\n        setApplications(updatedApps);\n        setSuccess('Application settings updated successfully');\n        handleCloseModal();\n      } else if (type === 'role') {\n        if (data.action === 'add') {\n          const updatedApps = applications.map(app =>\n            app.app_id === selectedApp.app_id\n              ? { ...app, roles: [...(app.roles || []), data.role] }\n              : app\n          );\n          setApplications(updatedApps);\n          setSuccess('Role added successfully');\n        } else if (data.action === 'remove') {\n          const updatedApps = applications.map(app =>\n            app.app_id === selectedApp.app_id\n              ? { ...app, roles: app.roles.filter(role => role !== data.role) }\n              : app\n          );\n          setApplications(updatedApps);\n          setSuccess('Role removed successfully');\n        }\n      } else if (type === 'user') {\n        setSuccess('User assigned successfully');\n      }\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error updating application:', err);\n      setError(`Failed to update application: ${err.message}`);\n    }\n  };\n\n  const handleDeleteApplication = async (appId) => {\n    if (window.confirm('Are you sure you want to delete this application? This action cannot be undone.')) {\n      try {\n        await api.deleteApplication(appId);\n        setApplications(applications.filter(app => app.app_id !== appId));\n        setSuccess('Application deleted successfully');\n        setTimeout(() => setSuccess(null), 3000);\n      } catch (err) {\n        console.error('Error deleting application:', err);\n        setError(`Failed to delete application: ${err.message}`);\n      }\n    }\n  };\n\n  if (loading) return <div className=\"loading\">Loading applications...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"application-list-container\">\n      <h3>Applications</h3>\n      \n      {success && <div className=\"success-message\">{success}</div>}\n      {error && <div className=\"error-message\">{error}</div>}\n      \n      {userType === 'admin' && (\n        <div className=\"admin-controls\">\n          <div className=\"add-application-form\">\n            <h4>Add New Application</h4>\n            <input\n              type=\"text\"\n              value={newApp.name}\n              onChange={(e) => setNewApp({ ...newApp, name: e.target.value })}\n              placeholder=\"Application Name\"\n            />\n            <input\n              type=\"text\"\n              value={newApp.url}\n              onChange={(e) => setNewApp({ ...newApp, url: e.target.value })}\n              placeholder=\"Application URL (e.g., app.example.com)\"\n            />\n            <button onClick={handleAddApplication}>Add Application</button>\n          </div>\n        </div>\n      )}\n\n      {userType === 'app_admin' && (\n        <div className=\"app-admin-controls\">\n          <div className=\"add-role-form\">\n            <h4>Add New Role</h4>\n            <select\n              value={newRole.appId}\n              onChange={(e) => setNewRole({ ...newRole, appId: e.target.value })}\n            >\n              <option value=\"\">Select Application</option>\n              {applications.map(app => (\n                <option key={app.app_id} value={app.app_id}>{app.app_name}</option>\n              ))}\n            </select>\n            <input\n              type=\"text\"\n              value={newRole.roleName}\n              onChange={(e) => setNewRole({ ...newRole, roleName: e.target.value })}\n              placeholder=\"Role Name\"\n            />\n            <button onClick={() => handleAddRole(newRole.appId, newRole.roleName)}>Add Role</button>\n          </div>\n        </div>\n      )}\n\n      {userType === 'app_admin' && (\n        <div className=\"app-admin-user-management-note\">\n          <p>\n            As an App Admin, you can assign users to your applications and manage their roles.\n          </p>\n        </div>\n      )}\n\n      <ul className=\"applications-list\">\n        {applications.map((app) => (\n          <li key={app.app_id} className=\"application-item\">\n            <div className=\"app-info\">\n              <span className=\"app-name\">{app.app_name}</span>\n              {userType === 'app_admin' && (\n                <div className=\"app-roles\">\n                  <strong>Roles:</strong>\n                  {(app.roles || []).map((role, index) => (\n                    <span key={index} className=\"role-tag\">\n                      {role}\n                      <button \n                        className=\"remove-role\"\n                        onClick={() => handleRemoveRole(app.app_id, role)}\n                      >\n                        ×\n                      </button>\n                    </span>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className=\"app-actions\">\n              <button \n                className=\"access-button\"\n                onClick={() => handleAccessApp(app)}\n              >\n                Access\n              </button>\n              {(userType === 'admin' || userType === 'app_admin') && (\n                <button \n                  className=\"manage-button\" \n                  onClick={() => handleManageApp(app)}\n                >\n                  Manage\n                </button>\n              )}\n              {userType === 'admin' && (\n                <button \n                  className=\"delete-button\" \n                  onClick={() => handleDeleteApplication(app.app_id)}\n                >\n                  Delete\n                </button>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      {selectedApp && (\n        <AppManagementModal\n          app={selectedApp}\n          userType={userType}\n          onClose={handleCloseModal}\n          onUpdate={handleAppUpdate}\n          isAdminOnly={userType === 'admin'}\n        />\n      )}\n\n      {showAccessRequestModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content access-request-modal\">\n            <div className=\"modal-header\">\n              <h3>Request Access</h3>\n              <button className=\"close-button\" onClick={() => setShowAccessRequestModal(false)}>×</button>\n            </div>\n            <div className=\"modal-body\">\n              <p className=\"access-denied-message\">\n                Access to restricted applications requires approval.\n              </p>\n              <div className=\"request-form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"app-select\">Select Application:</label>\n                  <select\n                    id=\"app-select\"\n                    value={selectedRestrictedApp?.app_id || ''}\n                    onChange={(e) => {\n                      const app = restrictedApps.find(a => a.app_id === parseInt(e.target.value));\n                      setSelectedRestrictedApp(app);\n                    }}\n                    className=\"app-select\"\n                  >\n                    <option value=\"\">Select an application</option>\n                    {restrictedApps.map(app => (\n                      <option key={app.app_id} value={app.app_id}>\n                        {app.app_name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"access-reason\">Reason for Access Request:</label>\n                  <textarea\n                    id=\"access-reason\"\n                    value={accessRequestReason}\n                    onChange={(e) => setAccessRequestReason(e.target.value)}\n                    placeholder=\"Please explain why you need access to this application...\"\n                    rows=\"4\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button className=\"request-button\" onClick={handleRequestAccess}>\n                Submit Request\n              </button>\n              <button className=\"cancel-button\" onClick={() => setShowAccessRequestModal(false)}>\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ApplicationList; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,+BAA+B;AACtC,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC;IAAEY,IAAI,EAAE,EAAE;IAAEC,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EACtE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACnE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC2B,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAAC6B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACxE,MAAM,CAAC+B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACdoC,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC,MAAMC,IAAI,GAAG,MAAMrC,GAAG,CAACsC,eAAe,CAAC,CAAC;MACxCH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,IAAI,CAAC;MAC3C7B,eAAe,CAAC6B,IAAI,CAAC;;MAErB;MACA,IAAIhC,QAAQ,KAAK,KAAK,EAAE;QACtB,MAAMkC,UAAU,GAAGF,IAAI,CAACG,MAAM,CAACC,GAAG,IAAI;UACpC,MAAMC,OAAO,GAAGD,GAAG,CAACE,QAAQ,CAACC,WAAW,CAAC,CAAC;UAC1C,OAAOF,OAAO,CAACG,QAAQ,CAAC,IAAI,CAAC,IACtBH,OAAO,CAACG,QAAQ,CAAC,QAAQ,CAAC,IAC1BH,OAAO,CAACG,QAAQ,CAAC,SAAS,CAAC;QACpC,CAAC,CAAC;QACFZ,iBAAiB,CAACM,UAAU,CAAC;MAC/B;MAEApB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAO2B,GAAG,EAAE;MACZX,OAAO,CAACf,KAAK,CAAC,8BAA8B,EAAE0B,GAAG,CAAC;MAClDzB,QAAQ,CAAC,iCAAiCyB,GAAG,CAACC,OAAO,EAAE,CAAC;MACxD5B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM6B,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAIvC,MAAM,CAACE,IAAI,IAAIF,MAAM,CAACG,GAAG,EAAE;MAC7B,IAAI;QACF,MAAMqC,WAAW,GAAG;UAClBN,QAAQ,EAAElC,MAAM,CAACE,IAAI;UACrBuC,OAAO,EAAEzC,MAAM,CAACG,GAAG;UACnBuC,WAAW,EAAE1C,MAAM,CAACI,KAAK;UACzBuC,UAAU,EAAE,CAAC,CAAC;QAChB,CAAC;QAED,MAAMC,MAAM,GAAG,MAAMrD,GAAG,CAACsD,iBAAiB,CAACL,WAAW,CAAC;QACvDzC,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE8C,MAAM,CAAC,CAAC;QAC1C3C,SAAS,CAAC;UAAEC,IAAI,EAAE,EAAE;UAAEC,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAC,CAAC;QAC3CU,UAAU,CAAC,gCAAgC,CAAC;QAC5CgC,UAAU,CAAC,MAAMhC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;MAC1C,CAAC,CAAC,OAAOuB,GAAG,EAAE;QACZX,OAAO,CAACf,KAAK,CAAC,2BAA2B,EAAE0B,GAAG,CAAC;QAC/CzB,QAAQ,CAAC,8BAA8ByB,GAAG,CAACC,OAAO,EAAE,CAAC;MACvD;IACF,CAAC,MAAM;MACL1B,QAAQ,CAAC,oCAAoC,CAAC;IAChD;EACF,CAAC;EAED,MAAMmC,aAAa,GAAG,MAAAA,CAAOxC,KAAK,EAAEC,QAAQ,KAAK;IAC/C,IAAI,CAACD,KAAK,IAAI,CAACC,QAAQ,EAAE;MACvBI,QAAQ,CAAC,oDAAoD,CAAC;MAC9D;IACF;IAEA,IAAI;MACF;MACA,MAAMoC,mBAAmB,GAAGlD,YAAY,CAACmD,GAAG,CAACjB,GAAG,IAC9CA,GAAG,CAACkB,MAAM,KAAKC,QAAQ,CAAC5C,KAAK,CAAC,GAC1B;QAAE,GAAGyB,GAAG;QAAE5B,KAAK,EAAE,CAAC,IAAI4B,GAAG,CAAC5B,KAAK,IAAI,EAAE,CAAC,EAAEI,QAAQ;MAAE,CAAC,GACnDwB,GACN,CAAC;MACDjC,eAAe,CAACiD,mBAAmB,CAAC;MACpC1C,UAAU,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAAC;MACvCM,UAAU,CAAC,yBAAyB,CAAC;MACrCgC,UAAU,CAAC,MAAMhC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZX,OAAO,CAACf,KAAK,CAAC,oBAAoB,EAAE0B,GAAG,CAAC;MACxCzB,QAAQ,CAAC,uBAAuByB,GAAG,CAACC,OAAO,EAAE,CAAC;IAChD;EACF,CAAC;EAED,MAAMc,gBAAgB,GAAG,MAAAA,CAAO7C,KAAK,EAAE8C,YAAY,KAAK;IACtD,IAAI;MACF;MACA,MAAML,mBAAmB,GAAGlD,YAAY,CAACmD,GAAG,CAACjB,GAAG,IAC9CA,GAAG,CAACkB,MAAM,KAAK3C,KAAK,GAChB;QAAE,GAAGyB,GAAG;QAAE5B,KAAK,EAAE,CAAC4B,GAAG,CAAC5B,KAAK,IAAI,EAAE,EAAE2B,MAAM,CAACuB,IAAI,IAAIA,IAAI,KAAKD,YAAY;MAAE,CAAC,GAC1ErB,GACN,CAAC;MACDjC,eAAe,CAACiD,mBAAmB,CAAC;MACpClC,UAAU,CAAC,2BAA2B,CAAC;MACvCgC,UAAU,CAAC,MAAMhC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZX,OAAO,CAACf,KAAK,CAAC,sBAAsB,EAAE0B,GAAG,CAAC;MAC1CzB,QAAQ,CAAC,0BAA0ByB,GAAG,CAACC,OAAO,EAAE,CAAC;IACnD;EACF,CAAC;EAED,MAAMiB,eAAe,GAAG,MAAOvB,GAAG,IAAK;IACrC,IAAI;MACF;MACA,IAAIpC,QAAQ,KAAK,KAAK,EAAE;QACtB,MAAM4D,YAAY,GAAGjC,cAAc,CAACkC,IAAI,CAAC3B,UAAU,IACjDA,UAAU,CAACoB,MAAM,KAAKlB,GAAG,CAACkB,MAC5B,CAAC;QAED,IAAIM,YAAY,EAAE;UAChBpC,wBAAwB,CAACY,GAAG,CAAC;UAC7Bd,yBAAyB,CAAC,IAAI,CAAC;UAC/B;QACF;MACF;;MAEA;MACA,IAAIc,GAAG,CAACE,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC,IAAIJ,GAAG,CAACS,OAAO,CAACL,QAAQ,CAAC,YAAY,CAAC,EAAE;QACvF,IAAI;UACF,MAAM7C,GAAG,CAACmE,sBAAsB,CAAC,CAAC;QACpC,CAAC,CAAC,OAAOrB,GAAG,EAAE;UACZX,OAAO,CAACf,KAAK,CAAC,mBAAmB,EAAE0B,GAAG,CAAC;QACzC;MACF;;MAEA;MACA,MAAMsB,YAAY,GAAG3B,GAAG,CAACS,OAAO,CAACmB,UAAU,CAAC,MAAM,CAAC,GAAG5B,GAAG,CAACS,OAAO,GAAG,WAAWT,GAAG,CAACS,OAAO,EAAE;MAC5FoB,MAAM,CAACC,IAAI,CAACH,YAAY,EAAE,QAAQ,EAAE,qBAAqB,CAAC;IAC5D,CAAC,CAAC,OAAOtB,GAAG,EAAE;MACZzB,QAAQ,CAAC,iCAAiCyB,GAAG,CAACC,OAAO,EAAE,CAAC;IAC1D;EACF,CAAC;EAED,MAAMyB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAAC5C,qBAAqB,IAAI,CAACE,mBAAmB,CAAC2C,IAAI,CAAC,CAAC,EAAE;MACzDpD,QAAQ,CAAC,sEAAsE,CAAC;MAChF;IACF;IAEA,IAAI;MACF;MACA,MAAMqD,WAAW,GAAG;QAClBf,MAAM,EAAE/B,qBAAqB,CAAC+B,MAAM;QACpChB,QAAQ,EAAEf,qBAAqB,CAACe,QAAQ;QACxCgC,MAAM,EAAE7C;MACV,CAAC;;MAED;MACA;;MAEAP,UAAU,CAAC,uEAAuE,CAAC;MACnFI,yBAAyB,CAAC,KAAK,CAAC;MAChCE,wBAAwB,CAAC,IAAI,CAAC;MAC9BE,sBAAsB,CAAC,EAAE,CAAC;MAC1BwB,UAAU,CAAC,MAAMhC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZzB,QAAQ,CAAC,kDAAkD,CAAC;IAC9D;EACF,CAAC;EAED,MAAMuD,eAAe,GAAInC,GAAG,IAAK;IAC/BhB,cAAc,CAACgB,GAAG,CAAC;EACrB,CAAC;EAED,MAAMoC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BpD,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMqD,eAAe,GAAG,MAAAA,CAAOC,IAAI,EAAE1C,IAAI,KAAK;IAC5C,IAAI;MACF,IAAI0C,IAAI,KAAK,UAAU,IAAI1C,IAAI,CAAC2C,IAAI,EAAE;QACpC;QACA,MAAMC,UAAU,GAAG;UACjBtC,QAAQ,EAAEN,IAAI,CAAC1B,IAAI,IAAIa,WAAW,CAACmB,QAAQ;UAC3CO,OAAO,EAAEb,IAAI,CAACzB,GAAG,IAAIY,WAAW,CAAC0B,OAAO;UACxCC,WAAW,EAAEd,IAAI,CAACc,WAAW,IAAI3B,WAAW,CAAC2B;QAC/C,CAAC;QAED,MAAMnD,GAAG,CAACkF,iBAAiB,CAAC1D,WAAW,CAACmC,MAAM,EAAEsB,UAAU,CAAC;;QAE3D;QACA,MAAME,WAAW,GAAG5E,YAAY,CAACmD,GAAG,CAACjB,GAAG,IACtCA,GAAG,CAACkB,MAAM,KAAKnC,WAAW,CAACmC,MAAM,GAC7B;UAAE,GAAGlB,GAAG;UAAE,GAAGwC;QAAW,CAAC,GACzBxC,GACN,CAAC;QACDjC,eAAe,CAAC2E,WAAW,CAAC;QAC5B5D,UAAU,CAAC,2CAA2C,CAAC;QACvDsD,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM,IAAIE,IAAI,KAAK,MAAM,EAAE;QAC1B,IAAI1C,IAAI,CAAC+C,MAAM,KAAK,KAAK,EAAE;UACzB,MAAMD,WAAW,GAAG5E,YAAY,CAACmD,GAAG,CAACjB,GAAG,IACtCA,GAAG,CAACkB,MAAM,KAAKnC,WAAW,CAACmC,MAAM,GAC7B;YAAE,GAAGlB,GAAG;YAAE5B,KAAK,EAAE,CAAC,IAAI4B,GAAG,CAAC5B,KAAK,IAAI,EAAE,CAAC,EAAEwB,IAAI,CAAC0B,IAAI;UAAE,CAAC,GACpDtB,GACN,CAAC;UACDjC,eAAe,CAAC2E,WAAW,CAAC;UAC5B5D,UAAU,CAAC,yBAAyB,CAAC;QACvC,CAAC,MAAM,IAAIc,IAAI,CAAC+C,MAAM,KAAK,QAAQ,EAAE;UACnC,MAAMD,WAAW,GAAG5E,YAAY,CAACmD,GAAG,CAACjB,GAAG,IACtCA,GAAG,CAACkB,MAAM,KAAKnC,WAAW,CAACmC,MAAM,GAC7B;YAAE,GAAGlB,GAAG;YAAE5B,KAAK,EAAE4B,GAAG,CAAC5B,KAAK,CAAC2B,MAAM,CAACuB,IAAI,IAAIA,IAAI,KAAK1B,IAAI,CAAC0B,IAAI;UAAE,CAAC,GAC/DtB,GACN,CAAC;UACDjC,eAAe,CAAC2E,WAAW,CAAC;UAC5B5D,UAAU,CAAC,2BAA2B,CAAC;QACzC;MACF,CAAC,MAAM,IAAIwD,IAAI,KAAK,MAAM,EAAE;QAC1BxD,UAAU,CAAC,4BAA4B,CAAC;MAC1C;MACAgC,UAAU,CAAC,MAAMhC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZX,OAAO,CAACf,KAAK,CAAC,6BAA6B,EAAE0B,GAAG,CAAC;MACjDzB,QAAQ,CAAC,iCAAiCyB,GAAG,CAACC,OAAO,EAAE,CAAC;IAC1D;EACF,CAAC;EAED,MAAMsC,uBAAuB,GAAG,MAAOrE,KAAK,IAAK;IAC/C,IAAIsD,MAAM,CAACgB,OAAO,CAAC,iFAAiF,CAAC,EAAE;MACrG,IAAI;QACF,MAAMtF,GAAG,CAACuF,iBAAiB,CAACvE,KAAK,CAAC;QAClCR,eAAe,CAACD,YAAY,CAACiC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACkB,MAAM,KAAK3C,KAAK,CAAC,CAAC;QACjEO,UAAU,CAAC,kCAAkC,CAAC;QAC9CgC,UAAU,CAAC,MAAMhC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;MAC1C,CAAC,CAAC,OAAOuB,GAAG,EAAE;QACZX,OAAO,CAACf,KAAK,CAAC,6BAA6B,EAAE0B,GAAG,CAAC;QACjDzB,QAAQ,CAAC,iCAAiCyB,GAAG,CAACC,OAAO,EAAE,CAAC;MAC1D;IACF;EACF,CAAC;EAED,IAAI7B,OAAO,EAAE,oBAAOf,OAAA;IAAKqF,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAuB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC1E,IAAIzE,KAAK,EAAE,oBAAOjB,OAAA;IAAKqF,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAErE;EAAK;IAAAsE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEtD,oBACE1F,OAAA;IAAKqF,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACzCtF,OAAA;MAAAsF,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpBvE,OAAO,iBAAInB,OAAA;MAAKqF,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEnE;IAAO;MAAAoE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3DzE,KAAK,iBAAIjB,OAAA;MAAKqF,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAErE;IAAK;MAAAsE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAErDxF,QAAQ,KAAK,OAAO,iBACnBF,OAAA;MAAKqF,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BtF,OAAA;QAAKqF,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCtF,OAAA;UAAAsF,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5B1F,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXe,KAAK,EAAErF,MAAM,CAACE,IAAK;UACnBoF,QAAQ,EAAGC,CAAC,IAAKtF,SAAS,CAAC;YAAE,GAAGD,MAAM;YAAEE,IAAI,EAAEqF,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UAChEI,WAAW,EAAC;QAAkB;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eACF1F,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXe,KAAK,EAAErF,MAAM,CAACG,GAAI;UAClBmF,QAAQ,EAAGC,CAAC,IAAKtF,SAAS,CAAC;YAAE,GAAGD,MAAM;YAAEG,GAAG,EAAEoF,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UAC/DI,WAAW,EAAC;QAAyC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,eACF1F,OAAA;UAAQgG,OAAO,EAAEnD,oBAAqB;UAAAyC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEAxF,QAAQ,KAAK,WAAW,iBACvBF,OAAA;MAAKqF,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjCtF,OAAA;QAAKqF,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BtF,OAAA;UAAAsF,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB1F,OAAA;UACE2F,KAAK,EAAEhF,OAAO,CAACE,KAAM;UACrB+E,QAAQ,EAAGC,CAAC,IAAKjF,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEE,KAAK,EAAEgF,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UAAAL,QAAA,gBAEnEtF,OAAA;YAAQ2F,KAAK,EAAC,EAAE;YAAAL,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC3CtF,YAAY,CAACmD,GAAG,CAACjB,GAAG,iBACnBtC,OAAA;YAAyB2F,KAAK,EAAErD,GAAG,CAACkB,MAAO;YAAA8B,QAAA,EAAEhD,GAAG,CAACE;UAAQ,GAA5CF,GAAG,CAACkB,MAAM;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA2C,CACnE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACT1F,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXe,KAAK,EAAEhF,OAAO,CAACG,QAAS;UACxB8E,QAAQ,EAAGC,CAAC,IAAKjF,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEG,QAAQ,EAAE+E,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UACtEI,WAAW,EAAC;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACF1F,OAAA;UAAQgG,OAAO,EAAEA,CAAA,KAAM3C,aAAa,CAAC1C,OAAO,CAACE,KAAK,EAAEF,OAAO,CAACG,QAAQ,CAAE;UAAAwE,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEAxF,QAAQ,KAAK,WAAW,iBACvBF,OAAA;MAAKqF,SAAS,EAAC,gCAAgC;MAAAC,QAAA,eAC7CtF,OAAA;QAAAsF,QAAA,EAAG;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN,eAED1F,OAAA;MAAIqF,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC9BlF,YAAY,CAACmD,GAAG,CAAEjB,GAAG,iBACpBtC,OAAA;QAAqBqF,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/CtF,OAAA;UAAKqF,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBtF,OAAA;YAAMqF,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAEhD,GAAG,CAACE;UAAQ;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC/CxF,QAAQ,KAAK,WAAW,iBACvBF,OAAA;YAAKqF,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBtF,OAAA;cAAAsF,QAAA,EAAQ;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACtB,CAACpD,GAAG,CAAC5B,KAAK,IAAI,EAAE,EAAE6C,GAAG,CAAC,CAACK,IAAI,EAAEqC,KAAK,kBACjCjG,OAAA;cAAkBqF,SAAS,EAAC,UAAU;cAAAC,QAAA,GACnC1B,IAAI,eACL5D,OAAA;gBACEqF,SAAS,EAAC,aAAa;gBACvBW,OAAO,EAAEA,CAAA,KAAMtC,gBAAgB,CAACpB,GAAG,CAACkB,MAAM,EAAEI,IAAI,CAAE;gBAAA0B,QAAA,EACnD;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAPAO,KAAK;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQV,CACP,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACN1F,OAAA;UAAKqF,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BtF,OAAA;YACEqF,SAAS,EAAC,eAAe;YACzBW,OAAO,EAAEA,CAAA,KAAMnC,eAAe,CAACvB,GAAG,CAAE;YAAAgD,QAAA,EACrC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACR,CAACxF,QAAQ,KAAK,OAAO,IAAIA,QAAQ,KAAK,WAAW,kBAChDF,OAAA;YACEqF,SAAS,EAAC,eAAe;YACzBW,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAACnC,GAAG,CAAE;YAAAgD,QAAA,EACrC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,EACAxF,QAAQ,KAAK,OAAO,iBACnBF,OAAA;YACEqF,SAAS,EAAC,eAAe;YACzBW,OAAO,EAAEA,CAAA,KAAMd,uBAAuB,CAAC5C,GAAG,CAACkB,MAAM,CAAE;YAAA8B,QAAA,EACpD;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GA3CCpD,GAAG,CAACkB,MAAM;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4Cf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAEJrE,WAAW,iBACVrB,OAAA,CAACF,kBAAkB;MACjBwC,GAAG,EAAEjB,WAAY;MACjBnB,QAAQ,EAAEA,QAAS;MACnBgG,OAAO,EAAExB,gBAAiB;MAC1ByB,QAAQ,EAAExB,eAAgB;MAC1ByB,WAAW,EAAElG,QAAQ,KAAK;IAAQ;MAAAqF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACF,EAEAnE,sBAAsB,iBACrBvB,OAAA;MAAKqF,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BtF,OAAA;QAAKqF,SAAS,EAAC,oCAAoC;QAAAC,QAAA,gBACjDtF,OAAA;UAAKqF,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BtF,OAAA;YAAAsF,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvB1F,OAAA;YAAQqF,SAAS,EAAC,cAAc;YAACW,OAAO,EAAEA,CAAA,KAAMxE,yBAAyB,CAAC,KAAK,CAAE;YAAA8D,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzF,CAAC,eACN1F,OAAA;UAAKqF,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBtF,OAAA;YAAGqF,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAErC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJ1F,OAAA;YAAKqF,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BtF,OAAA;cAAKqF,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzBtF,OAAA;gBAAOqG,OAAO,EAAC,YAAY;gBAAAf,QAAA,EAAC;cAAmB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACvD1F,OAAA;gBACEsG,EAAE,EAAC,YAAY;gBACfX,KAAK,EAAE,CAAAlE,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAE+B,MAAM,KAAI,EAAG;gBAC3CoC,QAAQ,EAAGC,CAAC,IAAK;kBACf,MAAMvD,GAAG,GAAGT,cAAc,CAAC0E,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChD,MAAM,KAAKC,QAAQ,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC;kBAC3EjE,wBAAwB,CAACY,GAAG,CAAC;gBAC/B,CAAE;gBACF+C,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBAEtBtF,OAAA;kBAAQ2F,KAAK,EAAC,EAAE;kBAAAL,QAAA,EAAC;gBAAqB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EAC9C7D,cAAc,CAAC0B,GAAG,CAACjB,GAAG,iBACrBtC,OAAA;kBAAyB2F,KAAK,EAAErD,GAAG,CAACkB,MAAO;kBAAA8B,QAAA,EACxChD,GAAG,CAACE;gBAAQ,GADFF,GAAG,CAACkB,MAAM;kBAAA+B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEf,CACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eACN1F,OAAA;cAAKqF,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzBtF,OAAA;gBAAOqG,OAAO,EAAC,eAAe;gBAAAf,QAAA,EAAC;cAA0B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACjE1F,OAAA;gBACEsG,EAAE,EAAC,eAAe;gBAClBX,KAAK,EAAEhE,mBAAoB;gBAC3BiE,QAAQ,EAAGC,CAAC,IAAKjE,sBAAsB,CAACiE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;gBACxDI,WAAW,EAAC,2DAA2D;gBACvEU,IAAI,EAAC;cAAG;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN1F,OAAA;UAAKqF,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BtF,OAAA;YAAQqF,SAAS,EAAC,gBAAgB;YAACW,OAAO,EAAE3B,mBAAoB;YAAAiB,QAAA,EAAC;UAEjE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT1F,OAAA;YAAQqF,SAAS,EAAC,eAAe;YAACW,OAAO,EAAEA,CAAA,KAAMxE,yBAAyB,CAAC,KAAK,CAAE;YAAA8D,QAAA,EAAC;UAEnF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvF,EAAA,CAhaQF,eAAe;AAAAyG,EAAA,GAAfzG,eAAe;AAkaxB,eAAeA,eAAe;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}