{"ast":null,"code":"var _jsxFileName = \"/Users/jaysingh/sample2copy/src/components/UserManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/UserManagement.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserManagement({\n  isAppAdmin,\n  onLogout\n}) {\n  _s();\n  var _applications$find;\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: '',\n    email: '',\n    selectedApp: '',\n    selectedRole: ''\n  });\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch users data\n      const usersData = await api.getUsers();\n\n      // Fetch applications data based on user type\n      let appsData = [];\n      if (isAppAdmin) {\n        appsData = await api.getAppAdminApplications();\n      } else {\n        appsData = await api.getApplications();\n      }\n\n      // Process and combine the data\n      const processedUsers = usersData.map(user => ({\n        ...user,\n        assignedApps: user.assignedApps || []\n      }));\n      setUsers(processedUsers);\n      setApplications(appsData);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error in fetchData:', err);\n      setError('Failed to fetch data. Please try again later.');\n      setLoading(false);\n    }\n  };\n  const handleAddUser = async () => {\n    if (!newUser.username.trim() || !newUser.email.trim()) {\n      setError('Please provide both username and email');\n      return;\n    }\n    try {\n      // Create the user\n      const response = await api.createUser({\n        username: newUser.username,\n        email: newUser.email,\n        password_hash: 'defaultPassword123',\n        user_type: 'end'\n      });\n\n      // If app admin and application is selected, assign the user to the application\n      if (isAppAdmin && newUser.selectedApp && newUser.selectedRole) {\n        await api.assignUserToApplication(response.user_id, newUser.selectedApp, newUser.selectedRole);\n      }\n\n      // Add the new user to the users list\n      const newUserObj = {\n        user_id: response.user_id,\n        username: newUser.username,\n        email: newUser.email,\n        user_type: 'end',\n        assignedApps: []\n      };\n      if (isAppAdmin && newUser.selectedApp && newUser.selectedRole) {\n        const selectedAppData = applications.find(app => app.app_id === newUser.selectedApp);\n        newUserObj.assignedApps.push({\n          appId: newUser.selectedApp,\n          appName: (selectedAppData === null || selectedAppData === void 0 ? void 0 : selectedAppData.app_name) || 'Unknown App',\n          role: newUser.selectedRole\n        });\n      }\n      setUsers(prevUsers => [...prevUsers, newUserObj]);\n\n      // Clear the form\n      setNewUser({\n        username: '',\n        email: '',\n        selectedApp: '',\n        selectedRole: ''\n      });\n      setSuccess('User added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error creating user:', err);\n      setError('Failed to add user: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    }\n  };\n  const handleAssignApp = async (userId, appId, role) => {\n    try {\n      await api.assignUserToApplication(userId, appId, role);\n      const updatedUsers = users.map(user => user.user_id === userId ? {\n        ...user,\n        assignedApps: [...user.assignedApps, {\n          appId,\n          role\n        }]\n      } : user);\n      setUsers(updatedUsers);\n      setSuccess('User assigned successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to assign user');\n    }\n  };\n  const handleRemoveAssignment = async (userId, appId) => {\n    try {\n      await api.removeUserFromApplication(userId, appId);\n      const updatedUsers = users.map(user => user.user_id === userId ? {\n        ...user,\n        assignedApps: user.assignedApps.filter(app => app.appId !== appId)\n      } : user);\n      setUsers(updatedUsers);\n      setSuccess('Assignment removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to remove assignment');\n    }\n  };\n  const handleAddRole = async (appId, roleName) => {\n    try {\n      await api.createRole({\n        app_id: appId,\n        role_name: roleName\n      });\n      const updatedApps = applications.map(app => app.app_id === appId ? {\n        ...app,\n        roles: [...app.roles, roleName]\n      } : app);\n      setApplications(updatedApps);\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to add role');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-management-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-user-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newUser.username,\n        onChange: e => setNewUser({\n          ...newUser,\n          username: e.target.value\n        }),\n        placeholder: \"Enter new user name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: newUser.email,\n        onChange: e => setNewUser({\n          ...newUser,\n          email: e.target.value\n        }),\n        placeholder: \"Enter user email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), isAppAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: newUser.selectedApp,\n          onChange: e => setNewUser({\n            ...newUser,\n            selectedApp: e.target.value,\n            selectedRole: ''\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: app.app_id,\n            children: app.app_name\n          }, app.app_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), newUser.selectedApp && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newUser.selectedRole,\n          onChange: e => setNewUser({\n            ...newUser,\n            selectedRole: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this), (_applications$find = applications.find(app => app.app_id === newUser.selectedApp)) === null || _applications$find === void 0 ? void 0 : _applications$find.roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: role,\n            children: role\n          }, role, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddUser,\n        children: [\"Add \", isAppAdmin ? 'End User' : 'App Admin']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), isAppAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-users-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recently Added End Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: users.filter(user => user.user_type === 'end').map(user => {\n            var _user$assignedApps, _applications$find2;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-name\",\n                  children: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-email\",\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-assignments\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Assigned Applications:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this), ((_user$assignedApps = user.assignedApps) === null || _user$assignedApps === void 0 ? void 0 : _user$assignedApps.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"assignments-list\",\n                    children: user.assignedApps.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"assignment-tag\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"app-name\",\n                        children: assignment.appName || 'Unknown App'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"role-name\",\n                        children: [\"(\", assignment.role || 'No Role', \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"remove-assignment\",\n                        onClick: () => handleRemoveAssignment(user.user_id, assignment.appId),\n                        title: \"Remove Assignment\",\n                        children: \"\\xD7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"no-assignments\",\n                    children: \"No applications assigned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"assignment-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                    value: user.selectedApp || '',\n                    onChange: e => {\n                      const updatedUsers = users.map(u => u.user_id === user.user_id ? {\n                        ...u,\n                        selectedApp: e.target.value,\n                        selectedRole: ''\n                      } : u);\n                      setUsers(updatedUsers);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Application\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 25\n                    }, this), applications.filter(app => {\n                      var _user$assignedApps2;\n                      return !((_user$assignedApps2 = user.assignedApps) !== null && _user$assignedApps2 !== void 0 && _user$assignedApps2.some(a => a.appId === app.app_id));\n                    }).map(app => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: app.app_id,\n                      children: app.app_name\n                    }, app.app_id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 29\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 23\n                  }, this), user.selectedApp && /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: user.selectedRole || '',\n                    onChange: e => {\n                      const updatedUsers = users.map(u => u.user_id === user.user_id ? {\n                        ...u,\n                        selectedRole: e.target.value\n                      } : u);\n                      setUsers(updatedUsers);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Role\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 27\n                    }, this), (_applications$find2 = applications.find(app => app.app_id === user.selectedApp)) === null || _applications$find2 === void 0 ? void 0 : _applications$find2.roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: role,\n                      children: role\n                    }, role, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 31\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 25\n                  }, this), user.selectedApp && user.selectedRole && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleAssignApp(user.user_id, user.selectedApp, user.selectedRole),\n                    className: \"assign-button\",\n                    children: \"Assign\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)\n            }, user.user_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"role-management\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Manage Roles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-roles\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: app.app_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-role-form\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"New role name\",\n              onKeyPress: e => {\n                if (e.key === 'Enter') {\n                  handleAddRole(app.app_id, e.target.value);\n                  e.target.value = '';\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"role-list\",\n            children: (app.roles || []).map((role, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"role-tag\",\n              children: role\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this)]\n        }, app.app_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(UserManagement, \"x65XmdiyGA+e2+IQbhJiuSKMLx0=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManagement","isAppAdmin","onLogout","_s","_applications$find","users","setUsers","newUser","setNewUser","username","email","selectedApp","selectedRole","applications","setApplications","loading","setLoading","error","setError","success","setSuccess","fetchData","usersData","getUsers","appsData","getAppAdminApplications","getApplications","processedUsers","map","user","assignedApps","err","console","handleAddUser","trim","response","createUser","password_hash","user_type","assignUserToApplication","user_id","newUserObj","selectedAppData","find","app","app_id","push","appId","appName","app_name","role","prevUsers","setTimeout","_err$response","_err$response$data","data","message","handleAssignApp","userId","updatedUsers","handleRemoveAssignment","removeUserFromApplication","filter","handleAddRole","roleName","createRole","role_name","updatedApps","roles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_user$assignedApps","_applications$find2","length","assignment","index","title","u","_user$assignedApps2","some","a","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/jaysingh/sample2copy/src/components/UserManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport '../styles/UserManagement.css';\n\nfunction UserManagement({ isAppAdmin, onLogout }) {\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: '',\n    email: '',\n    selectedApp: '',\n    selectedRole: ''\n  });\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Fetch users data\n      const usersData = await api.getUsers();\n      \n      // Fetch applications data based on user type\n      let appsData = [];\n      if (isAppAdmin) {\n        appsData = await api.getAppAdminApplications();\n      } else {\n        appsData = await api.getApplications();\n      }\n\n      // Process and combine the data\n      const processedUsers = usersData.map(user => ({\n        ...user,\n        assignedApps: user.assignedApps || []\n      }));\n\n      setUsers(processedUsers);\n      setApplications(appsData);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error in fetchData:', err);\n      setError('Failed to fetch data. Please try again later.');\n      setLoading(false);\n    }\n  };\n\n  const handleAddUser = async () => {\n    if (!newUser.username.trim() || !newUser.email.trim()) {\n      setError('Please provide both username and email');\n      return;\n    }\n\n    try {\n      // Create the user\n      const response = await api.createUser({\n        username: newUser.username,\n        email: newUser.email,\n        password_hash: 'defaultPassword123',\n        user_type: 'end'\n      });\n\n      // If app admin and application is selected, assign the user to the application\n      if (isAppAdmin && newUser.selectedApp && newUser.selectedRole) {\n        await api.assignUserToApplication(response.user_id, newUser.selectedApp, newUser.selectedRole);\n      }\n\n      // Add the new user to the users list\n      const newUserObj = {\n        user_id: response.user_id,\n        username: newUser.username,\n        email: newUser.email,\n        user_type: 'end',\n        assignedApps: []\n      };\n\n      if (isAppAdmin && newUser.selectedApp && newUser.selectedRole) {\n        const selectedAppData = applications.find(app => app.app_id === newUser.selectedApp);\n        newUserObj.assignedApps.push({\n          appId: newUser.selectedApp,\n          appName: selectedAppData?.app_name || 'Unknown App',\n          role: newUser.selectedRole\n        });\n      }\n\n      setUsers(prevUsers => [...prevUsers, newUserObj]);\n      \n      // Clear the form\n      setNewUser({\n        username: '',\n        email: '',\n        selectedApp: '',\n        selectedRole: ''\n      });\n      \n      setSuccess('User added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error('Error creating user:', err);\n      setError('Failed to add user: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const handleAssignApp = async (userId, appId, role) => {\n    try {\n      await api.assignUserToApplication(userId, appId, role);\n      const updatedUsers = users.map(user => \n        user.user_id === userId \n          ? { \n              ...user, \n              assignedApps: [...user.assignedApps, { appId, role }] \n            } \n          : user\n      );\n      setUsers(updatedUsers);\n      setSuccess('User assigned successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to assign user');\n    }\n  };\n\n  const handleRemoveAssignment = async (userId, appId) => {\n    try {\n      await api.removeUserFromApplication(userId, appId);\n      const updatedUsers = users.map(user =>\n        user.user_id === userId\n          ? {\n              ...user,\n              assignedApps: user.assignedApps.filter(app => app.appId !== appId)\n            }\n          : user\n      );\n      setUsers(updatedUsers);\n      setSuccess('Assignment removed successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to remove assignment');\n    }\n  };\n\n  const handleAddRole = async (appId, roleName) => {\n    try {\n      await api.createRole({\n        app_id: appId,\n        role_name: roleName\n      });\n      const updatedApps = applications.map(app =>\n        app.app_id === appId\n          ? { ...app, roles: [...app.roles, roleName] }\n          : app\n      );\n      setApplications(updatedApps);\n      setSuccess('Role added successfully');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      setError('Failed to add role');\n    }\n  };\n\n  if (loading) return <div className=\"loading\">Loading...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"user-management-container\">\n      <div className=\"user-management-header\">\n        <h3>User Management</h3>\n      </div>\n      {success && <div className=\"success-message\">{success}</div>}\n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"add-user-form\">\n        <input\n          type=\"text\"\n          value={newUser.username}\n          onChange={(e) => setNewUser({ ...newUser, username: e.target.value })}\n          placeholder=\"Enter new user name\"\n        />\n        <input\n          type=\"email\"\n          value={newUser.email}\n          onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\n          placeholder=\"Enter user email\"\n        />\n        {isAppAdmin && (\n          <>\n            <select\n              value={newUser.selectedApp}\n              onChange={(e) => setNewUser({ ...newUser, selectedApp: e.target.value, selectedRole: '' })}\n            >\n              <option value=\"\">Select Application</option>\n              {applications.map(app => (\n                <option key={app.app_id} value={app.app_id}>\n                  {app.app_name}\n                </option>\n              ))}\n            </select>\n            {newUser.selectedApp && (\n              <select\n                value={newUser.selectedRole}\n                onChange={(e) => setNewUser({ ...newUser, selectedRole: e.target.value })}\n              >\n                <option value=\"\">Select Role</option>\n                {applications\n                  .find(app => app.app_id === newUser.selectedApp)?.roles\n                  .map(role => (\n                    <option key={role} value={role}>\n                      {role}\n                    </option>\n                  ))}\n              </select>\n            )}\n          </>\n        )}\n        <button onClick={handleAddUser}>\n          Add {isAppAdmin ? 'End User' : 'App Admin'}\n        </button>\n      </div>\n\n      {isAppAdmin && (\n        <>\n          <div className=\"new-users-list\">\n            <h4>Recently Added End Users</h4>\n            <ul>\n              {users\n                .filter(user => user.user_type === 'end')\n                .map((user) => (\n                <li key={user.user_id}>\n                  <div className=\"user-info\">\n                    <span className=\"user-name\">{user.username}</span>\n                    <span className=\"user-email\">{user.email}</span>\n                    <div className=\"user-assignments\">\n                      <strong>Assigned Applications:</strong>\n                      {user.assignedApps?.length > 0 ? (\n                        <div className=\"assignments-list\">\n                          {user.assignedApps.map((assignment, index) => (\n                            <div key={index} className=\"assignment-tag\">\n                              <span className=\"app-name\">{assignment.appName || 'Unknown App'}</span>\n                              <span className=\"role-name\">({assignment.role || 'No Role'})</span>\n                              <button \n                                className=\"remove-assignment\"\n                                onClick={() => handleRemoveAssignment(user.user_id, assignment.appId)}\n                                title=\"Remove Assignment\"\n                              >\n                                ×\n                              </button>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <span className=\"no-assignments\">No applications assigned</span>\n                      )}\n                    </div>\n                    <div className=\"assignment-form\">\n                      <select\n                        value={user.selectedApp || ''}\n                        onChange={(e) => {\n                          const updatedUsers = users.map(u => \n                            u.user_id === user.user_id \n                              ? { ...u, selectedApp: e.target.value, selectedRole: '' }\n                              : u\n                          );\n                          setUsers(updatedUsers);\n                        }}\n                      >\n                        <option value=\"\">Select Application</option>\n                        {applications\n                          .filter(app => !user.assignedApps?.some(a => a.appId === app.app_id))\n                          .map(app => (\n                            <option key={app.app_id} value={app.app_id}>\n                              {app.app_name}\n                            </option>\n                          ))}\n                      </select>\n                      {user.selectedApp && (\n                        <select\n                          value={user.selectedRole || ''}\n                          onChange={(e) => {\n                            const updatedUsers = users.map(u => \n                              u.user_id === user.user_id \n                                ? { ...u, selectedRole: e.target.value }\n                                : u\n                            );\n                            setUsers(updatedUsers);\n                          }}\n                        >\n                          <option value=\"\">Select Role</option>\n                          {applications\n                            .find(app => app.app_id === user.selectedApp)?.roles\n                            .map(role => (\n                              <option key={role} value={role}>\n                                {role}\n                              </option>\n                            ))}\n                        </select>\n                      )}\n                      {user.selectedApp && user.selectedRole && (\n                        <button\n                          onClick={() => handleAssignApp(user.user_id, user.selectedApp, user.selectedRole)}\n                          className=\"assign-button\"\n                        >\n                          Assign\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"role-management\">\n            <h4>Manage Roles</h4>\n            {applications.map(app => (\n              <div key={app.app_id} className=\"app-roles\">\n                <h5>{app.app_name}</h5>\n                <div className=\"add-role-form\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"New role name\"\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') {\n                        handleAddRole(app.app_id, e.target.value);\n                        e.target.value = '';\n                      }\n                    }}\n                  />\n                </div>\n                <div className=\"role-list\">\n                  {(app.roles || []).map((role, index) => (\n                    <span key={index} className=\"role-tag\">{role}</span>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default UserManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}